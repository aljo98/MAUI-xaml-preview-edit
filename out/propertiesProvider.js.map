{"version":3,"file":"propertiesProvider.js","sourceRoot":"","sources":["../src/propertiesProvider.ts"],"names":[],"mappings":"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","sourcesContent":["import * as vscode from 'vscode';\r\n\r\nexport interface ElementProperty {\r\n    key: string;\r\n    value: string;\r\n    type: 'string' | 'number' | 'color' | 'boolean' | 'select';\r\n    options?: string[];\r\n    section: 'appearance' | 'layout' | 'structure';\r\n    elementType?: string;\r\n}\r\n\r\nexport interface XamlElement {\r\n    id: string;\r\n    type: string;\r\n    name: string;\r\n    properties: ElementProperty[];\r\n    children: XamlElement[];\r\n    parent?: XamlElement;\r\n}\r\n\r\nexport interface TemplateItem {\r\n    id: string;\r\n    name: string;\r\n    description?: string;\r\n    category?: string;\r\n    xaml: string;\r\n}\r\n\r\nexport class MauiPropertiesProvider implements vscode.TreeDataProvider<PropertyTreeItem> {\r\n    private _onDidChangeTreeData: vscode.EventEmitter<PropertyTreeItem | undefined | null | void> = new vscode.EventEmitter<PropertyTreeItem | undefined | null | void>();\r\n    readonly onDidChangeTreeData: vscode.Event<PropertyTreeItem | undefined | null | void> = this._onDidChangeTreeData.event;\r\n\r\n    private _selectedElement: XamlElement | undefined;\r\n    private _elements: XamlElement[] = [];\r\n    private _templates: TemplateItem[] = [];\r\n    private _extensionUri: vscode.Uri;\r\n    private _showAllFlat: boolean = true;\r\n    private _itemCache: Map<string, PropertyTreeItem> = new Map();\r\n    private _extraPropertySuggestions: string[] = [\r\n        'Text', 'TextColor', 'BackgroundColor', 'FontSize', 'FontAttributes', 'FontFamily', 'LineHeight', 'CharacterSpacing', 'TextDecorations',\r\n        'WidthRequest', 'HeightRequest', 'MinWidthRequest', 'MinHeightRequest', 'MaxWidthRequest', 'MaxHeightRequest',\r\n        'Margin', 'Padding', 'CornerRadius', 'BorderColor', 'BorderThickness', 'Stroke', 'StrokeThickness', 'Opacity', 'IsVisible', 'IsEnabled',\r\n        'HorizontalOptions', 'VerticalOptions', 'HorizontalTextAlignment', 'TextAlignment', 'Grid.Row', 'Grid.Column', 'Grid.RowSpan', 'Grid.ColumnSpan',\r\n        'Style', 'ClassId'\r\n    ];\r\n\r\n    private _mode: 'combined' | 'props' | 'templates' | 'structure' = 'combined';\r\n\r\n    constructor(extensionUri: vscode.Uri, mode: 'combined' | 'props' | 'templates' | 'structure' = 'combined') {\r\n        this._extensionUri = extensionUri;\r\n        this._mode = mode;\r\n    }\r\n\r\n    refresh(): void {\r\n        this._onDidChangeTreeData.fire();\r\n    }\r\n\r\n    setSelectedElement(element: XamlElement | undefined): void {\r\n        this._selectedElement = element;\r\n        this.refresh();\r\n    }\r\n\r\n    setElements(elements: XamlElement[]): void {\r\n        this._elements = elements;\r\n        // rebuild cache so reveal() can find items immediately\r\n        this._itemCache.clear();\r\n        this._indexElements(elements);\r\n        this.refresh();\r\n    }\r\n\r\n    setTemplates(templates: TemplateItem[]): void {\r\n        this._templates = templates || [];\r\n        this.refresh();\r\n    }\r\n\r\n    public setMode(mode: 'combined' | 'props' | 'templates' | 'structure') {\r\n        this._mode = mode;\r\n        this.refresh();\r\n    }\r\n\r\n    // Allow external reveal to access the cached tree item\r\n    public getTreeItemById(id: string): PropertyTreeItem | undefined {\r\n        return this._itemCache.get(id);\r\n    }\r\n\r\n    getTreeItem(element: PropertyTreeItem): vscode.TreeItem { return element; }\r\n\r\n    getChildren(element?: PropertyTreeItem): Thenable<PropertyTreeItem[]> {\r\n        // MODED ROOT\r\n        if (!element) {\r\n            if (this._mode === 'props') {\r\n                return this._getPropsRoot();\r\n            }\r\n            if (this._mode === 'templates') {\r\n                return this._getTemplatesRoot();\r\n            }\r\n            if (this._mode === 'structure') {\r\n                return Promise.resolve(this._getStructureItems());\r\n            }\r\n            // combined (backward compatible)\r\n            return Promise.resolve([\r\n                new PropertyTreeItem('Lastnosti izbranega elementa', 'section-props', vscode.TreeItemCollapsibleState.Expanded, 'fas fa-cog'),\r\n                new PropertyTreeItem('Template primeri', 'section-templates', vscode.TreeItemCollapsibleState.Collapsed, 'fas fa-list'),\r\n                new PropertyTreeItem('Struktura Elementov', 'section', vscode.TreeItemCollapsibleState.Expanded, 'fas fa-sitemap', undefined, undefined, 'structure')\r\n            ]);\r\n        }\r\n\r\n        // Combined mode sections handling remains\r\n        if (element.contextValue === 'section-templates') {\r\n            return this._getTemplatesRoot();\r\n        }\r\n\r\n        if (element.contextValue === 'section') {\r\n            return Promise.resolve(this._getStructureItems());\r\n        }\r\n\r\n        if (element.contextValue === 'section-props') {\r\n            return this._getPropsRoot();\r\n        }\r\n\r\n        if (element.contextValue === 'element') {\r\n            const xamlElement = this._findElementById(element.elementId!);\r\n            if (xamlElement && xamlElement.children) {\r\n                return Promise.resolve(\r\n                    xamlElement.children.map(child => this._getOrCreateStructureItem(child))\r\n                );\r\n            }\r\n        }\r\n\r\n        return Promise.resolve([]);\r\n    }\r\n\r\n    private _getPropsRoot(): Thenable<PropertyTreeItem[]> {\r\n        const items: PropertyTreeItem[] = [];\r\n        if (!this._selectedElement) {\r\n            items.push(new PropertyTreeItem('Ni izbranega elementa', 'info', vscode.TreeItemCollapsibleState.None, 'fas fa-info-circle'));\r\n            return Promise.resolve(items);\r\n        }\r\n        const addItem = new PropertyTreeItem('+ Dodaj lastnost…', 'add-property', vscode.TreeItemCollapsibleState.None, 'fas fa-plus');\r\n        addItem.command = { command: 'mauiProperties.addProperty', title: 'Dodaj lastnost', arguments: [this._selectedElement] };\r\n        items.push(addItem);\r\n        for (const prop of this._selectedElement.properties) {\r\n            const item = new PropertyTreeItem(`${prop.key}: ${prop.value}`, 'property', vscode.TreeItemCollapsibleState.None, this._getPropertyIcon(prop.type), undefined, prop);\r\n            item.command = { command: 'mauiProperties.editProperty', title: 'Uredi lastnost', arguments: [prop] };\r\n            items.push(item);\r\n        }\r\n        return Promise.resolve(items);\r\n    }\r\n\r\n    private _getTemplatesRoot(): Thenable<PropertyTreeItem[]> {\r\n        const items: PropertyTreeItem[] = [];\r\n        if (!this._templates.length) {\r\n            items.push(new PropertyTreeItem('Ni definiranih template-ov', 'info', vscode.TreeItemCollapsibleState.None, 'fas fa-info-circle'));\r\n            return Promise.resolve(items);\r\n        }\r\n        for (const tpl of this._templates) {\r\n            const item = new PropertyTreeItem(tpl.name, 'template', vscode.TreeItemCollapsibleState.None, 'fas fa-square', tpl.id);\r\n            item.description = tpl.description || tpl.category;\r\n            item.command = { command: 'mauiTemplates.insertTemplate', title: 'Vstavi template', arguments: [tpl] };\r\n            items.push(item);\r\n        }\r\n        return Promise.resolve(items);\r\n    }\r\n\r\n    private _indexElements(elements: XamlElement[]) {\r\n        const walk = (el: XamlElement) => {\r\n            this._getOrCreateStructureItem(el);\r\n            el.children.forEach(walk);\r\n        };\r\n        elements.forEach(walk);\r\n    }\r\n\r\n    private _getOrCreateStructureItem(el: XamlElement): PropertyTreeItem {\r\n        let item = this._itemCache.get(el.id);\r\n        if (!item) {\r\n            item = new PropertyTreeItem(\r\n                el.name || el.type,\r\n                'element',\r\n                el.children.length > 0 ? vscode.TreeItemCollapsibleState.Collapsed : vscode.TreeItemCollapsibleState.None,\r\n                this._getElementIcon(el.type),\r\n                el.id\r\n            );\r\n            item.command = { command: 'mauiDesigner.selectElementById', title: 'Izberi element', arguments: [el.id] };\r\n            this._itemCache.set(el.id, item);\r\n        } else {\r\n            item.label = el.name || el.type;\r\n            item.collapsibleState = el.children.length > 0 ? vscode.TreeItemCollapsibleState.Collapsed : vscode.TreeItemCollapsibleState.None;\r\n            item.iconPath = this._getVSCodeIcon(this._getElementIcon(el.type));\r\n        }\r\n        return item;\r\n    }\r\n\r\n    private _getStructureItems(): PropertyTreeItem[] {\r\n        return this._elements.map(el => this._getOrCreateStructureItem(el));\r\n    }\r\n\r\n    private _getPropertiesForSection(section: string): PropertyTreeItem[] {\r\n        if (!this._selectedElement) {\r\n            return [new PropertyTreeItem('Ni izbranega elementa', 'info', vscode.TreeItemCollapsibleState.None, 'fas fa-info-circle')];\r\n        }\r\n        const sectionProperties = this._selectedElement.properties.filter(prop => prop.section === section);\r\n        return sectionProperties.map(prop => {\r\n            const item = new PropertyTreeItem(`${prop.key}: ${prop.value}`, 'property', vscode.TreeItemCollapsibleState.None, this._getPropertyIcon(prop.type), undefined, prop);\r\n            item.command = { command: 'mauiProperties.editProperty', title: 'Edit Property', arguments: [prop] };\r\n            return item;\r\n        });\r\n    }\r\n\r\n    private _findElementById(id: string): XamlElement | undefined {\r\n        const find = (arr: XamlElement[]): XamlElement | undefined => {\r\n            for (const e of arr) {\r\n                if (e.id === id) return e;\r\n                const f = find(e.children);\r\n                if (f) return f;\r\n            }\r\n            return undefined;\r\n        };\r\n        return find(this._elements);\r\n    }\r\n\r\n    private _getElementIcon(elementType: string): string {\r\n        const iconMap: { [key: string]: string } = {\r\n            'ContentPage': 'fas fa-file',\r\n            'StackLayout': 'fas fa-align-justify',\r\n            'Grid': 'fas fa-th',\r\n            'Label': 'fas fa-font',\r\n            'Button': 'fas fa-hand-pointer',\r\n            'Entry': 'fas fa-keyboard',\r\n            'Image': 'fas fa-image',\r\n            'Frame': 'fas fa-square',\r\n            'Border': 'fas fa-border-style',\r\n            'BoxView': 'fas fa-square'\r\n        };\r\n        return iconMap[elementType] || 'fas fa-cube';\r\n    }\r\n\r\n    private _getPropertyIcon(propertyType: string): string {\r\n        const iconMap: { [key: string]: string } = {\r\n            'string': 'fas fa-font',\r\n            'number': 'fas fa-hashtag',\r\n            'color': 'fas fa-palette',\r\n            'boolean': 'fas fa-toggle-on',\r\n            'select': 'fas fa-list'\r\n        };\r\n        return iconMap[propertyType] || 'fas fa-cog';\r\n    }\r\n\r\n    private _getVSCodeIcon(iconClass: string): vscode.ThemeIcon {\r\n        const iconMap: { [key: string]: string } = {\r\n            'fas fa-palette': 'symbol-color',\r\n            'fas fa-ruler-combined': 'symbol-ruler',\r\n            'fas fa-sitemap': 'type-hierarchy',\r\n            'fas fa-file': 'file',\r\n            'fas fa-align-justify': 'list-flat',\r\n            'fas fa-th': 'table',\r\n            'fas fa-font': 'symbol-string',\r\n            'fas fa-hand-pointer': 'hand',\r\n            'fas fa-keyboard': 'symbol-key',\r\n            'fas fa-image': 'file-media',\r\n            'fas fa-square': 'symbol-structure',\r\n            'fas fa-border-style': 'border',\r\n            'fas fa-cube': 'symbol-misc',\r\n            'fas fa-hashtag': 'symbol-number',\r\n            'fas fa-toggle-on': 'symbol-boolean',\r\n            'fas fa-list': 'list-selection',\r\n            'fas fa-cog': 'gear',\r\n            'fas fa-info-circle': 'info',\r\n            'fas fa-plus': 'add'\r\n        };\r\n        return new vscode.ThemeIcon(iconMap[iconClass] || 'symbol-misc');\r\n    }\r\n}\r\n\r\nexport class PropertyTreeItem extends vscode.TreeItem {\r\n    constructor(\r\n        public label: string,\r\n        public readonly contextValue: string,\r\n        public collapsibleState: vscode.TreeItemCollapsibleState,\r\n        public readonly iconClass?: string,\r\n        public readonly elementId?: string,\r\n        public readonly property?: ElementProperty,\r\n        public readonly sectionType?: string\r\n    ) {\r\n        super(label, collapsibleState);\r\n        this.tooltip = this.label;\r\n        this.contextValue = contextValue;\r\n        if (iconClass) {\r\n            this.iconPath = this._getVSCodeIcon(iconClass);\r\n        }\r\n    }\r\n\r\n    private _getVSCodeIcon(iconClass: string): vscode.ThemeIcon {\r\n        const iconMap: { [key: string]: string } = {\r\n            'fas fa-palette': 'symbol-color',\r\n            'fas fa-ruler-combined': 'symbol-ruler',\r\n            'fas fa-sitemap': 'type-hierarchy',\r\n            'fas fa-file': 'file',\r\n            'fas fa-align-justify': 'list-flat',\r\n            'fas fa-th': 'table',\r\n            'fas fa-font': 'symbol-string',\r\n            'fas fa-hand-pointer': 'hand',\r\n            'fas fa-keyboard': 'symbol-key',\r\n            'fas fa-image': 'file-media',\r\n            'fas fa-square': 'symbol-structure',\r\n            'fas fa-border-style': 'border',\r\n            'fas fa-cube': 'symbol-misc',\r\n            'fas fa-hashtag': 'symbol-number',\r\n            'fas fa-toggle-on': 'symbol-boolean',\r\n            'fas fa-list': 'list-selection',\r\n            'fas fa-cog': 'gear',\r\n            'fas fa-info-circle': 'info',\r\n            'fas fa-plus': 'add'\r\n        };\r\n        return new vscode.ThemeIcon(iconMap[iconClass] || 'symbol-misc');\r\n    }\r\n}"]}
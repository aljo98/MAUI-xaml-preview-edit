{"version":3,"file":"propertiesProvider.js","sourceRoot":"","sources":["../src/propertiesProvider.ts"],"names":[],"mappings":"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","sourcesContent":["import * as vscode from 'vscode';\r\n\r\nexport interface ElementProperty {\r\n    key: string;\r\n    value: string;\r\n    type: 'string' | 'number' | 'color' | 'boolean' | 'select';\r\n    options?: string[];\r\n    section: 'appearance' | 'layout' | 'structure';\r\n    elementType?: string;\r\n}\r\n\r\nexport interface XamlElement {\r\n    id: string;\r\n    type: string;\r\n    name: string;\r\n    properties: ElementProperty[];\r\n    children: XamlElement[];\r\n    parent?: XamlElement;\r\n}\r\n\r\nexport class MauiPropertiesProvider implements vscode.TreeDataProvider<PropertyTreeItem> {\r\n    private _onDidChangeTreeData: vscode.EventEmitter<PropertyTreeItem | undefined | null | void> = new vscode.EventEmitter<PropertyTreeItem | undefined | null | void>();\r\n    readonly onDidChangeTreeData: vscode.Event<PropertyTreeItem | undefined | null | void> = this._onDidChangeTreeData.event;\r\n\r\n    private _selectedElement: XamlElement | undefined;\r\n    private _elements: XamlElement[] = [];\r\n    private _extensionUri: vscode.Uri;\r\n    private _showAllFlat: boolean = true;\r\n    private _extraPropertySuggestions: string[] = [\r\n        'Text', 'TextColor', 'BackgroundColor', 'FontSize', 'FontAttributes', 'FontFamily', 'LineHeight', 'CharacterSpacing', 'TextDecorations',\r\n        'WidthRequest', 'HeightRequest', 'MinWidthRequest', 'MinHeightRequest', 'MaxWidthRequest', 'MaxHeightRequest',\r\n        'Margin', 'Padding', 'CornerRadius', 'BorderColor', 'BorderThickness', 'Stroke', 'StrokeThickness', 'Opacity', 'IsVisible', 'IsEnabled',\r\n        'HorizontalOptions', 'VerticalOptions', 'HorizontalTextAlignment', 'TextAlignment', 'Grid.Row', 'Grid.Column', 'Grid.RowSpan', 'Grid.ColumnSpan',\r\n        'Style', 'ClassId'\r\n    ];\r\n\r\n    constructor(extensionUri: vscode.Uri) {\r\n        this._extensionUri = extensionUri;\r\n    }\r\n\r\n    refresh(): void {\r\n        this._onDidChangeTreeData.fire();\r\n    }\r\n\r\n    setSelectedElement(element: XamlElement | undefined): void {\r\n        this._selectedElement = element;\r\n        this.refresh();\r\n    }\r\n\r\n    setElements(elements: XamlElement[]): void {\r\n        this._elements = elements;\r\n        this.refresh();\r\n    }\r\n\r\n    getTreeItem(element: PropertyTreeItem): vscode.TreeItem {\r\n        return element;\r\n    }\r\n\r\n    getChildren(element?: PropertyTreeItem): Thenable<PropertyTreeItem[]> {\r\n        if (!element) {\r\n            // Root items: Properties (flat list) and Structure\r\n            return Promise.resolve([\r\n                new PropertyTreeItem(\r\n                    'Lastnosti',\r\n                    'section-props',\r\n                    vscode.TreeItemCollapsibleState.Expanded,\r\n                    'fas fa-cog'\r\n                ),\r\n                new PropertyTreeItem(\r\n                    'Struktura Elementov',\r\n                    'section',\r\n                    vscode.TreeItemCollapsibleState.Expanded,\r\n                    'fas fa-sitemap',\r\n                    undefined,\r\n                    undefined,\r\n                    'structure'\r\n                )\r\n            ]);\r\n        }\r\n\r\n        if (element.contextValue === 'section') {\r\n            // Tree structure elements\r\n            return Promise.resolve(this._getStructureItems());\r\n        }\r\n\r\n        if (element.contextValue === 'section-props') {\r\n            // Flat properties list with an Add Property action at top\r\n            const items: PropertyTreeItem[] = [];\r\n            if (!this._selectedElement) {\r\n                items.push(new PropertyTreeItem('Ni izbranega elementa', 'info', vscode.TreeItemCollapsibleState.None, 'fas fa-info-circle'));\r\n                return Promise.resolve(items);\r\n            }\r\n\r\n            // Add property action\r\n            const addItem = new PropertyTreeItem('+ Dodaj lastnost…', 'add-property', vscode.TreeItemCollapsibleState.None, 'fas fa-plus');\r\n            addItem.command = {\r\n                command: 'mauiProperties.addProperty',\r\n                title: 'Dodaj lastnost',\r\n                arguments: [this._selectedElement]\r\n            };\r\n            items.push(addItem);\r\n\r\n            // Show all current properties as editable rows\r\n            for (const prop of this._selectedElement.properties) {\r\n                const item = new PropertyTreeItem(\r\n                    `${prop.key}: ${prop.value}`,\r\n                    'property',\r\n                    vscode.TreeItemCollapsibleState.None,\r\n                    this._getPropertyIcon(prop.type),\r\n                    undefined,\r\n                    prop\r\n                );\r\n                item.command = {\r\n                    command: 'mauiProperties.editProperty',\r\n                    title: 'Uredi lastnost',\r\n                    arguments: [prop]\r\n                };\r\n                items.push(item);\r\n            }\r\n\r\n            return Promise.resolve(items);\r\n        }\r\n\r\n        if (element.contextValue === 'element') {\r\n            // Children of element in structure\r\n            const xamlElement = this._findElementById(element.elementId!);\r\n            if (xamlElement && xamlElement.children) {\r\n                return Promise.resolve(\r\n                    xamlElement.children.map(child =>\r\n                        new PropertyTreeItem(\r\n                            child.name || child.type,\r\n                            'element',\r\n                            child.children.length > 0 ? vscode.TreeItemCollapsibleState.Collapsed : vscode.TreeItemCollapsibleState.None,\r\n                            this._getElementIcon(child.type),\r\n                            child.id\r\n                        )\r\n                    )\r\n                );\r\n            }\r\n        }\r\n\r\n        return Promise.resolve([]);\r\n    }\r\n\r\n    private _getStructureItems(): PropertyTreeItem[] {\r\n        return this._elements.map(element =>\r\n            new PropertyTreeItem(\r\n                element.name || element.type,\r\n                'element',\r\n                element.children.length > 0 ? vscode.TreeItemCollapsibleState.Expanded : vscode.TreeItemCollapsibleState.None,\r\n                this._getElementIcon(element.type),\r\n                element.id\r\n            )\r\n        );\r\n    }\r\n\r\n    private _getPropertiesForSection(section: string): PropertyTreeItem[] {\r\n        if (!this._selectedElement) {\r\n            return [\r\n                new PropertyTreeItem(\r\n                    'Ni izbranega elementa',\r\n                    'info',\r\n                    vscode.TreeItemCollapsibleState.None,\r\n                    'fas fa-info-circle'\r\n                )\r\n            ];\r\n        }\r\n\r\n        const sectionProperties = this._selectedElement.properties.filter(prop => prop.section === section);\r\n\r\n        return sectionProperties.map(prop => {\r\n            const item = new PropertyTreeItem(\r\n                `${prop.key}: ${prop.value}`,\r\n                'property',\r\n                vscode.TreeItemCollapsibleState.None,\r\n                this._getPropertyIcon(prop.type),\r\n                undefined,\r\n                prop\r\n            );\r\n\r\n            // Add click command for editing\r\n            item.command = {\r\n                command: 'mauiProperties.editProperty',\r\n                title: 'Edit Property',\r\n                arguments: [prop]\r\n            };\r\n\r\n            return item;\r\n        });\r\n    }\r\n\r\n    private _findElementById(id: string): XamlElement | undefined {\r\n        const findElement = (elements: XamlElement[]): XamlElement | undefined => {\r\n            for (const element of elements) {\r\n                if (element.id === id) {\r\n                    return element;\r\n                }\r\n                const found = findElement(element.children);\r\n                if (found) {\r\n                    return found;\r\n                }\r\n            }\r\n            return undefined;\r\n        };\r\n\r\n        return findElement(this._elements);\r\n    }\r\n\r\n    private _getElementIcon(elementType: string): string {\r\n        const iconMap: { [key: string]: string } = {\r\n            'ContentPage': 'fas fa-file',\r\n            'StackLayout': 'fas fa-align-justify',\r\n            'Grid': 'fas fa-th',\r\n            'Label': 'fas fa-font',\r\n            'Button': 'fas fa-hand-pointer',\r\n            'Entry': 'fas fa-keyboard',\r\n            'Image': 'fas fa-image',\r\n            'Frame': 'fas fa-square',\r\n            'Border': 'fas fa-border-style'\r\n        };\r\n        return iconMap[elementType] || 'fas fa-cube';\r\n    }\r\n\r\n    private _getPropertyIcon(propertyType: string): string {\r\n        const iconMap: { [key: string]: string } = {\r\n            'string': 'fas fa-font',\r\n            'number': 'fas fa-hashtag',\r\n            'color': 'fas fa-palette',\r\n            'boolean': 'fas fa-toggle-on',\r\n            'select': 'fas fa-list'\r\n        };\r\n        return iconMap[propertyType] || 'fas fa-cog';\r\n    }\r\n}\r\n\r\nexport class PropertyTreeItem extends vscode.TreeItem {\r\n    constructor(\r\n        public readonly label: string,\r\n        public readonly contextValue: string,\r\n        public readonly collapsibleState: vscode.TreeItemCollapsibleState,\r\n        public readonly iconClass?: string,\r\n        public readonly elementId?: string,\r\n        public readonly property?: ElementProperty,\r\n        public readonly sectionType?: string\r\n    ) {\r\n        super(label, collapsibleState);\r\n\r\n        this.tooltip = this.label;\r\n        this.contextValue = contextValue;\r\n\r\n        if (contextValue === 'section') {\r\n            this.sectionType = sectionType || (label.toLowerCase().includes('videz') ? 'appearance' :\r\n                label.toLowerCase().includes('postavitev') ? 'layout' : 'structure');\r\n        }\r\n\r\n        // VS Code doesn't support Font Awesome directly, so we'll use built-in icons\r\n        if (iconClass) {\r\n            this.iconPath = this._getVSCodeIcon(iconClass);\r\n        }\r\n    }\r\n\r\n    private _getVSCodeIcon(iconClass: string): vscode.ThemeIcon {\r\n        // Map Font Awesome icons to VS Code theme icons\r\n        const iconMap: { [key: string]: string } = {\r\n            'fas fa-palette': 'symbol-color',\r\n            'fas fa-ruler-combined': 'symbol-ruler',\r\n            'fas fa-sitemap': 'type-hierarchy',\r\n            'fas fa-file': 'file',\r\n            'fas fa-align-justify': 'list-flat',\r\n            'fas fa-th': 'table',\r\n            'fas fa-font': 'symbol-string',\r\n            'fas fa-hand-pointer': 'hand',\r\n            'fas fa-keyboard': 'symbol-key',\r\n            'fas fa-image': 'file-media',\r\n            'fas fa-square': 'symbol-structure',\r\n            'fas fa-border-style': 'border',\r\n            'fas fa-cube': 'symbol-misc',\r\n            'fas fa-hashtag': 'symbol-number',\r\n            'fas fa-toggle-on': 'symbol-boolean',\r\n            'fas fa-list': 'list-selection',\r\n            'fas fa-cog': 'gear',\r\n            'fas fa-info-circle': 'info'\r\n        };\r\n\r\n        return new vscode.ThemeIcon(iconMap[iconClass] || 'symbol-misc');\r\n    }\r\n}"]}
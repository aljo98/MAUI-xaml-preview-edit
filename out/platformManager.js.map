{"version":3,"file":"platformManager.js","sourceRoot":"","sources":["../src/platformManager.ts"],"names":[],"mappings":"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","sourcesContent":["import * as vscode from 'vscode';\r\n\r\n// Platform configurations for device simulation\r\nexport interface PlatformConfig {\r\n  name: string;\r\n  displayName: string;\r\n  width: number;\r\n  height: number;\r\n  devicePixelRatio: number;\r\n  userAgent: string;\r\n  statusBarHeight: number;\r\n  navigationBarHeight: number;\r\n  borderRadius: number;\r\n  backgroundColor: string;\r\n  frameColor: string;\r\n}\r\n\r\nexport class PlatformManager {\r\n  private currentPlatform: string = 'Android';\r\n  private platforms: Map<string, PlatformConfig> = new Map();\r\n\r\n  constructor() {\r\n    this.initializePlatforms();\r\n    console.log('[PlatformManager] Initialized with platforms:', Array.from(this.platforms.keys()));\r\n  }\r\n\r\n  private initializePlatforms(): void {\r\n    this.platforms.set('Android', {\r\n      name: 'Android',\r\n      displayName: 'Android Phone',\r\n      width: 360,\r\n      height: 640,\r\n      devicePixelRatio: 3,\r\n      userAgent: 'Mozilla/5.0 (Linux; Android 11; Pixel 4) AppleWebKit/537.36',\r\n      statusBarHeight: 24,\r\n      navigationBarHeight: 48,\r\n      borderRadius: 20,\r\n      backgroundColor: '#000000',\r\n      frameColor: '#2c2c2c'\r\n    });\r\n\r\n    this.platforms.set('iOS', {\r\n      name: 'iOS',\r\n      displayName: 'iPhone',\r\n      width: 375,\r\n      height: 667,\r\n      devicePixelRatio: 2,\r\n      userAgent: 'Mozilla/5.0 (iPhone; CPU iPhone OS 15_0 like Mac OS X) AppleWebKit/605.1.15',\r\n      statusBarHeight: 20,\r\n      navigationBarHeight: 44,\r\n      borderRadius: 25,\r\n      backgroundColor: '#000000',\r\n      frameColor: '#1c1c1e'\r\n    });\r\n\r\n    this.platforms.set('Windows', {\r\n      name: 'Windows',\r\n      displayName: 'Windows Desktop',\r\n      width: 800,\r\n      height: 600,\r\n      devicePixelRatio: 1,\r\n      userAgent: 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36',\r\n      statusBarHeight: 0,\r\n      navigationBarHeight: 32,\r\n      borderRadius: 8,\r\n      backgroundColor: '#f3f3f3',\r\n      frameColor: '#e1e1e1'\r\n    });\r\n\r\n    this.platforms.set('macOS', {\r\n      name: 'macOS',\r\n      displayName: 'macOS Desktop',\r\n      width: 800,\r\n      height: 600,\r\n      devicePixelRatio: 2,\r\n      userAgent: 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36',\r\n      statusBarHeight: 0,\r\n      navigationBarHeight: 28,\r\n      borderRadius: 12,\r\n      backgroundColor: '#f5f5f7',\r\n      frameColor: '#d1d1d6'\r\n    });\r\n\r\n    console.log('[PlatformManager] Initialized platforms:', Array.from(this.platforms.keys()));\r\n  }\r\n\r\n  public getCurrentPlatform(): string {\r\n    return this.currentPlatform;\r\n  }\r\n\r\n  public setPlatform(platformName: string): boolean {\r\n    if (this.platforms.has(platformName)) {\r\n      this.currentPlatform = platformName;\r\n      console.log(`[PlatformManager] Platform switched to: ${platformName}`);\r\n      return true;\r\n    }\r\n    console.warn(`[PlatformManager] Unknown platform: ${platformName}`);\r\n    return false;\r\n  }\r\n\r\n  public getCurrentConfig(): PlatformConfig {\r\n    return this.platforms.get(this.currentPlatform) || this.platforms.get('Android')!;\r\n  }\r\n\r\n  public getAllPlatforms(): PlatformConfig[] {\r\n    return Array.from(this.platforms.values());\r\n  }\r\n\r\n  public generatePlatformSelectorHtml(): string {\r\n    const platforms = this.getAllPlatforms();\r\n    let html = '<div class=\"platform-selector\">';\r\n\r\n    for (const platform of platforms) {\r\n      const isActive = platform.name === this.currentPlatform;\r\n      html += `\r\n        <button class=\"platform-btn ${isActive ? 'active' : ''}\" \r\n            data-platform=\"${platform.name}\"\r\n            title=\"${platform.displayName}\">\r\n          ${this.getPlatformIcon(platform.name)} ${platform.displayName}\r\n        </button>\r\n      `;\r\n    }\r\n\r\n    html += '</div>';\r\n    return html;\r\n  }\r\n\r\n  private getPlatformIcon(platformName: string): string {\r\n    switch (platformName) {\r\n      case 'Android': return 'ü§ñ';\r\n      case 'iOS': return 'üì±';\r\n      case 'Windows': return 'ü™ü';\r\n      case 'macOS': return 'üçé';\r\n      default: return 'üì±';\r\n    }\r\n  }\r\n\r\n  public generateDeviceFrameCss(): string {\r\n    const config = this.getCurrentConfig();\r\n\r\n    return `\r\n            .device-frame {\r\n                width: ${config.width}px;\r\n                height: ${config.height}px;\r\n                border-radius: ${config.borderRadius}px;\r\n                background-color: ${config.frameColor};\r\n                box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3);\r\n                position: relative;\r\n                overflow: hidden;\r\n                margin: 20px auto;\r\n            }\r\n\r\n            .device-screen {\r\n                width: 100%;\r\n                height: 100%;\r\n                background-color: ${config.backgroundColor};\r\n                border-radius: ${Math.max(0, config.borderRadius - 4)}px;\r\n                position: relative;\r\n                overflow: hidden;\r\n            }\r\n\r\n            .status-bar {\r\n                height: ${config.statusBarHeight}px;\r\n                background: linear-gradient(90deg, \r\n                    ${config.name === 'iOS' ? '#000' : '#212121'} 0%, \r\n                    ${config.name === 'iOS' ? '#000' : '#424242'} 100%);\r\n                display: flex;\r\n                align-items: center;\r\n                justify-content: space-between;\r\n                padding: 0 12px;\r\n                font-size: 12px;\r\n                color: white;\r\n            }\r\n\r\n            .navigation-bar {\r\n                height: ${config.navigationBarHeight}px;\r\n                background: ${config.name === 'Windows' ? '#f0f0f0' : config.name === 'macOS' ? '#f5f5f7' : 'transparent'};\r\n                border-bottom: ${config.name === 'Windows' || config.name === 'macOS' ? '1px solid #e0e0e0' : 'none'};\r\n                display: flex;\r\n                align-items: center;\r\n                padding: 0 16px;\r\n            }\r\n\r\n            .content-area {\r\n                height: calc(100% - ${config.statusBarHeight + config.navigationBarHeight}px);\r\n                overflow: auto;\r\n                background-color: ${this.getContentBackgroundColor(config.name)};\r\n            }\r\n\r\n            .platform-selector {\r\n                display: flex;\r\n                gap: 8px;\r\n                margin-bottom: 16px;\r\n                flex-wrap: wrap;\r\n            }\r\n\r\n            .platform-btn {\r\n                padding: 8px 16px;\r\n                border: 2px solid #e0e0e0;\r\n                border-radius: 8px;\r\n                background: white;\r\n                cursor: pointer;\r\n                transition: all 0.2s ease;\r\n                font-size: 14px;\r\n                display: flex;\r\n                align-items: center;\r\n                gap: 6px;\r\n            }\r\n\r\n            .platform-btn:hover {\r\n                border-color: #007acc;\r\n                background: #f0f8ff;\r\n            }\r\n\r\n            .platform-btn.active {\r\n                border-color: #007acc;\r\n                background: #007acc;\r\n                color: white;\r\n            }\r\n\r\n            .device-wrapper {\r\n                transition: transform 0.3s ease;\r\n                transform-origin: center top;\r\n            }\r\n        `;\r\n  }\r\n\r\n  private getContentBackgroundColor(platformName: string): string {\r\n    switch (platformName) {\r\n      case 'Android': return '#ffffff';\r\n      case 'iOS': return '#f2f2f7';\r\n      case 'Windows': return '#f9f9f9';\r\n      case 'macOS': return '#ffffff';\r\n      default: return '#ffffff';\r\n    }\r\n  }\r\n\r\n  public generateStatusBarContent(): string {\r\n    const config = this.getCurrentConfig();\r\n\r\n    if (config.statusBarHeight === 0) {\r\n      return '';\r\n    }\r\n\r\n    const time = new Date().toLocaleTimeString('en-US', {\r\n      hour12: false,\r\n      hour: '2-digit',\r\n      minute: '2-digit'\r\n    });\r\n\r\n    switch (config.name) {\r\n      case 'Android':\r\n        return `\r\n                    <div class=\"status-left\">\r\n                        <span>${time}</span>\r\n                    </div>\r\n                    <div class=\"status-right\">\r\n                        <span>üì∂ üì± üîã</span>\r\n                    </div>\r\n                `;\r\n      case 'iOS':\r\n        return `\r\n                    <div class=\"status-left\">\r\n                        <span>${time}</span>\r\n                    </div>\r\n                    <div class=\"status-right\">\r\n                        <span>üì∂ üì± üîã</span>\r\n                    </div>\r\n                `;\r\n      default:\r\n        return '';\r\n    }\r\n  }\r\n\r\n  public generateNavigationBarContent(): string {\r\n    const config = this.getCurrentConfig();\r\n\r\n    if (config.navigationBarHeight === 0) {\r\n      return '';\r\n    }\r\n\r\n    switch (config.name) {\r\n      case 'Windows':\r\n        return `\r\n                    <div class=\"nav-title\">MAUI App</div>\r\n                    <div class=\"nav-controls\">\r\n                        <button class=\"nav-btn\">‚àí</button>\r\n                        <button class=\"nav-btn\">‚ñ°</button>\r\n                        <button class=\"nav-btn\">√ó</button>\r\n                    </div>\r\n                `;\r\n      case 'macOS':\r\n        return `\r\n                    <div class=\"nav-controls-mac\">\r\n                        <div class=\"mac-btn mac-close\"></div>\r\n                        <div class=\"mac-btn mac-minimize\"></div>\r\n                        <div class=\"mac-btn mac-maximize\"></div>\r\n                    </div>\r\n                    <div class=\"nav-title-mac\">MAUI App</div>\r\n                `;\r\n      default:\r\n        return '<div class=\"nav-title\">MAUI App</div>';\r\n    }\r\n  }\r\n\r\n  // Generate JavaScript for platform switching\r\n  public generatePlatformSwitchScript(): string {\r\n    return `\r\n      function switchPlatform(platformName) {\r\n        console.log('[PlatformManager] Switching to platform:', platformName);\r\n        try {\r\n          // Use the page-level 'vscode' object if present (set in the main script) to avoid calling acquireVsCodeApi() twice\r\n          if (typeof window !== 'undefined' && (window as any).vscode && typeof (window as any).vscode.postMessage === 'function') {\r\n            (window as any).vscode.postMessage({ command: 'switchPlatform', platform: platformName });\r\n          } else if (typeof acquireVsCodeApi === 'function') {\r\n            // Fallback: attempt to acquire, but catch if it's already been acquired elsewhere\r\n            try { acquireVsCodeApi().postMessage({ command: 'switchPlatform', platform: platformName }); } catch(e) { console.warn('[PlatformManager] acquireVsCodeApi fallback failed', e); }\r\n          } else {\r\n            console.warn('[PlatformManager] VS Code API not available to post platform switch');\r\n          }\r\n        } catch (err) {\r\n          console.warn('[PlatformManager] Error while posting platform switch', err);\r\n        }\r\n                document.querySelectorAll('.platform-btn').forEach(btn => btn.classList.remove('active'));\r\n                const activeBtn = document.querySelector('[data-platform=\"' + platformName + '\"]');\r\n                if (activeBtn) activeBtn.classList.add('active');\r\n            }\r\n\r\n            window.switchPlatform = switchPlatform;\r\n\r\n            function setupPlatformSwitching() {\r\n                const platformButtons = document.querySelectorAll('.platform-btn');\r\n                platformButtons.forEach(btn => {\r\n                    btn.addEventListener('click', function(e) {\r\n                        e.preventDefault();\r\n                        e.stopPropagation();\r\n                        const platform = this.getAttribute('data-platform');\r\n                        if (platform) switchPlatform(platform);\r\n                    });\r\n                });\r\n            }\r\n\r\n            if (document.readyState === 'loading') {\r\n                document.addEventListener('DOMContentLoaded', setupPlatformSwitching);\r\n            } else {\r\n                setupPlatformSwitching();\r\n            }\r\n        `;\r\n  }\r\n}"]}
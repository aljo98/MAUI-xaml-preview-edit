{"version":3,"file":"previewProvider.js","sourceRoot":"","sources":["../src/previewProvider.ts"],"names":[],"mappings":"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","sourcesContent":["import * as vscode from 'vscode';\r\nimport * as path from 'path';\r\nimport { XMLParser } from 'fast-xml-parser';\r\n\r\nimport { MauiPropertiesProvider, XamlElement, ElementProperty, PropertyTreeItem } from './propertiesProvider';\r\nimport { ResourceManager, ParsedResource, StyleResource } from './resourceManager';\r\nimport { PlatformManager } from './platformManager';\r\nimport { ZoomManager } from './zoomManager';\r\n\r\ninterface ParsedElement {\r\n    id: string;\r\n    type: string;\r\n    name?: string;\r\n    attributes: Record<string, string>;\r\n    resolvedAttributes: Record<string, string>;\r\n    children: ParsedElement[];\r\n    textContent?: string;\r\n    metadata: {\r\n        startLine?: number;\r\n        startIndex?: number;\r\n        gridRows?: string[];\r\n        gridColumns?: string[];\r\n        cornerRadius?: string;\r\n    };\r\n}\r\n\r\nconst COLOR_NAME_MAP: Record<string, string> = {\r\n    transparent: 'transparent',\r\n    black: '#000000',\r\n    white: '#ffffff',\r\n    red: '#ff0000',\r\n    green: '#008000',\r\n    blue: '#0000ff',\r\n    yellow: '#ffff00',\r\n    orange: '#ffa500',\r\n    gray: '#808080',\r\n    grey: '#808080',\r\n    lightgray: '#d3d3d3',\r\n    darkgray: '#4d4d4d',\r\n    lightgrey: '#d3d3d3',\r\n    darkgrey: '#4d4d4d',\r\n    cyan: '#00ffff',\r\n    magenta: '#ff00ff',\r\n    purple: '#800080',\r\n    brown: '#a52a2a',\r\n    teal: '#008080',\r\n    indigo: '#4b0082'\r\n};\r\n\r\nexport class MauiXamlPreviewProvider implements vscode.WebviewPanelSerializer {\r\n    private static readonly viewType = 'mauiXamlPreview';\r\n\r\n    private readonly _extensionUri: vscode.Uri;\r\n    private _currentPanel: vscode.WebviewPanel | undefined;\r\n    private _currentDocument: vscode.TextDocument | undefined;\r\n    private _elementHighlightDecoration: vscode.TextEditorDecorationType | undefined;\r\n    private _elementMap: Map<string, { startLine: number; endLine: number; elementName: string }> = new Map();\r\n    private _propertiesProvider: MauiPropertiesProvider | undefined;\r\n    private _propertiesTreeView: vscode.TreeView<PropertyTreeItem> | undefined;\r\n\r\n    private _resourceManager: ResourceManager;\r\n    private _platformManager: PlatformManager;\r\n    private _zoomManager: ZoomManager;\r\n\r\n    private _resources: ParsedResource[] = [];\r\n    private _styles: StyleResource[] = [];\r\n    private _themeColors: Map<string, string> = new Map();\r\n\r\n    private _parsedElements: ParsedElement[] = [];\r\n    private _elementLookup: Map<string, ParsedElement> = new Map();\r\n    private _xamlElements: XamlElement[] = [];\r\n    private _elementIdCounter = 0;\r\n    private _currentSelectedElementId: string | undefined;\r\n    private _viewMode: 'full' | 'selected' = 'full';\r\n\r\n    private _xmlParser: XMLParser;\r\n\r\n    constructor(extensionUri: vscode.Uri) {\r\n        this._extensionUri = extensionUri;\r\n        this._resourceManager = new ResourceManager();\r\n        this._platformManager = new PlatformManager();\r\n        this._zoomManager = new ZoomManager();\r\n        this._xmlParser = new XMLParser({\r\n            ignoreAttributes: false,\r\n            attributeNamePrefix: '@_',\r\n            textNodeName: '#text',\r\n            parseTagValue: false,\r\n            parseAttributeValue: false,\r\n            trimValues: true,\r\n            removeNSPrefix: false,\r\n            allowBooleanAttributes: true\r\n        });\r\n        console.log('[PreviewProvider] Initialized with managers');\r\n    }\r\n\r\n    // Provide color suggestions for property editors\r\n    public getColorSuggestions(): string[] {\r\n        const suggestions = new Set<string>();\r\n        // Theme colors\r\n        for (const [k, v] of this._themeColors.entries()) {\r\n            suggestions.add(k);\r\n            suggestions.add(v);\r\n        }\r\n        // Parsed resources\r\n        for (const r of this._resources) {\r\n            if (r.type === 'Color' && r.value) {\r\n                suggestions.add(r.key);\r\n                suggestions.add(r.value);\r\n            }\r\n        }\r\n        // Common named colors\r\n        for (const name of Object.keys(COLOR_NAME_MAP)) {\r\n            suggestions.add(name);\r\n        }\r\n        return Array.from(suggestions).filter(Boolean).slice(0, 200);\r\n    }\r\n\r\n    // Provide style key suggestions\r\n    public getStyleSuggestions(): string[] {\r\n        const styles = new Set<string>();\r\n        for (const s of this._styles) {\r\n            if (s.key) styles.add(s.key);\r\n        }\r\n        return Array.from(styles).slice(0, 200);\r\n    }\r\n\r\n    // Provide generic StaticResource keys (e.g., Colors, Brushes, etc.)\r\n    public getResourceKeySuggestions(): string[] {\r\n        const keys = new Set<string>();\r\n        for (const r of this._resources) {\r\n            if (r.key) keys.add(r.key);\r\n        }\r\n        return Array.from(keys).slice(0, 300);\r\n    }\r\n\r\n    public setElementHighlightDecoration(decoration: vscode.TextEditorDecorationType) {\r\n        this._elementHighlightDecoration = decoration;\r\n    }\r\n\r\n    public setPropertiesProvider(provider: MauiPropertiesProvider, treeView?: vscode.TreeView<PropertyTreeItem>) {\r\n        this._propertiesProvider = provider;\r\n        this._propertiesTreeView = treeView;\r\n        console.log('[PreviewProvider] Properties provider set');\r\n    }\r\n\r\n    public updateElementProperty(property: ElementProperty, newValue: string) {\r\n        if (this._currentPanel) {\r\n            this._currentPanel.webview.postMessage({\r\n                type: 'updateProperty',\r\n                property: property.key,\r\n                value: newValue\r\n            });\r\n        }\r\n\r\n        if (this._propertiesProvider) {\r\n            this._propertiesProvider.refresh();\r\n        }\r\n    }\r\n\r\n    public async deserializeWebviewPanel(webviewPanel: vscode.WebviewPanel): Promise<void> {\r\n        this._currentPanel = webviewPanel;\r\n        this._configureWebview(webviewPanel.webview);\r\n    }\r\n\r\n    public async openPreview(document: vscode.TextDocument) {\r\n        console.log('[PreviewProvider] Opening preview for:', document.fileName);\r\n        this._currentDocument = document;\r\n\r\n        if (this._currentPanel) {\r\n            try {\r\n                this._currentPanel.reveal(vscode.ViewColumn.Beside);\r\n                await this.updatePreview(document);\r\n                return;\r\n            } catch (error) {\r\n                console.warn('[PreviewProvider] Existing panel is no longer usable, recreating.', error);\r\n                this._currentPanel.dispose();\r\n                this._currentPanel = undefined;\r\n            }\r\n        }\r\n\r\n        this._currentPanel = vscode.window.createWebviewPanel(\r\n            MauiXamlPreviewProvider.viewType,\r\n            `MAUI Preview: ${path.basename(document.fileName)}`,\r\n            vscode.ViewColumn.Beside,\r\n            {\r\n                enableScripts: true,\r\n                retainContextWhenHidden: true,\r\n                localResourceRoots: [this._extensionUri]\r\n            }\r\n        );\r\n\r\n        this._configureWebview(this._currentPanel.webview);\r\n        await this.updatePreview(document);\r\n\r\n        this._currentPanel.onDidDispose(() => {\r\n            this._currentPanel = undefined;\r\n            console.log('[PreviewProvider] Panel disposed');\r\n        }, null);\r\n    }\r\n\r\n    public async updatePreview(document: vscode.TextDocument) {\r\n        if (!this._currentPanel) {\r\n            console.warn('[PreviewProvider] No panel available for update');\r\n            return;\r\n        }\r\n\r\n        this._currentDocument = document;\r\n\r\n        try {\r\n            const xamlContent = document.getText();\r\n            console.log('[PreviewProvider] Updating preview for:', document.fileName);\r\n\r\n            const resourceData = await this._resourceManager.loadResourcesForFile(document.fileName);\r\n            this._resources = resourceData.resources;\r\n            this._styles = resourceData.styles;\r\n            this._initializeThemeColors();\r\n\r\n            this._parsedElements = this._parseXamlDocument(xamlContent);\r\n            this._indexParsedElements();\r\n            this._assignElementPositions(xamlContent);\r\n            this._xamlElements = this._convertParsedToXamlElements(this._parsedElements);\r\n\r\n            const htmlContent = this._generatePreviewHtml();\r\n            this._currentPanel.webview.html = htmlContent;\r\n\r\n            this._sendPropertiesDataToSidebar();\r\n\r\n            console.log('[PreviewProvider] Preview updated successfully');\r\n        } catch (error) {\r\n            console.error('[PreviewProvider] Error updating preview:', error);\r\n            this._showErrorMessage('Failed to update preview: ' + error);\r\n        }\r\n    }\r\n\r\n    private _configureWebview(webview: vscode.Webview) {\r\n        webview.options = {\r\n            enableScripts: true,\r\n            localResourceRoots: [this._extensionUri]\r\n        };\r\n\r\n        webview.onDidReceiveMessage(async (message) => {\r\n            console.log('[PreviewProvider] Received message:', message.command, message);\r\n\r\n            switch (message.command) {\r\n                case 'elementSelected':\r\n                    await this._handleElementSelection(message.elementId, message.line);\r\n                    break;\r\n                case 'switchPlatform':\r\n                    await this._handlePlatformSwitch(message.platform);\r\n                    break;\r\n                case 'zoom':\r\n                    this._handleZoom(message.action, message.value);\r\n                    break;\r\n                case 'changeViewMode':\r\n                    this._handleViewModeChange(message.mode);\r\n                    break;\r\n                case 'ready':\r\n                    console.log('[PreviewProvider] Webview ready');\r\n                    setTimeout(() => {\r\n                        this._sendPropertiesDataToSidebar();\r\n                        this._applyViewModeToWebview();\r\n                    }, 50);\r\n                    break;\r\n                default:\r\n                    console.warn('[PreviewProvider] Unknown command:', message.command);\r\n            }\r\n        });\r\n\r\n        console.log('[PreviewProvider] Webview configured');\r\n    }\r\n\r\n    private async _handleElementSelection(elementId: string, rawLine?: any) {\r\n        if (!elementId) {\r\n            return;\r\n        }\r\n\r\n        this._currentSelectedElementId = elementId;\r\n\r\n        let targetLine: number | undefined;\r\n        if (rawLine !== undefined && rawLine !== null && rawLine !== '') {\r\n            const parsed = Number(rawLine);\r\n            if (!Number.isNaN(parsed)) {\r\n                targetLine = parsed;\r\n            }\r\n        }\r\n\r\n        const elementInfo = this._elementMap.get(elementId);\r\n        if (!targetLine && elementInfo) {\r\n            targetLine = elementInfo.startLine;\r\n        }\r\n\r\n        if (targetLine !== undefined && this._currentDocument) {\r\n            const editor = vscode.window.activeTextEditor;\r\n            if (editor && editor.document === this._currentDocument) {\r\n                const clampedLine = Math.max(0, Math.min(targetLine, editor.document.lineCount - 1));\r\n                const position = new vscode.Position(clampedLine, 0);\r\n                editor.selection = new vscode.Selection(position, position);\r\n                editor.revealRange(new vscode.Range(position, position), vscode.TextEditorRevealType.InCenterIfOutsideViewport);\r\n\r\n                if (this._elementHighlightDecoration && elementInfo) {\r\n                    const endLine = Math.max(elementInfo.startLine, elementInfo.endLine);\r\n                    const range = new vscode.Range(\r\n                        elementInfo.startLine,\r\n                        0,\r\n                        endLine,\r\n                        editor.document.lineAt(endLine).text.length\r\n                    );\r\n                    editor.setDecorations(this._elementHighlightDecoration, [range]);\r\n                }\r\n            }\r\n        }\r\n\r\n        await this._focusPropertiesView();\r\n        this._sendElementPropertiesToSidebar(elementId);\r\n        this._applyViewModeToWebview(elementId);\r\n    }\r\n\r\n    private async _handlePlatformSwitch(platform: string) {\r\n        if (!platform) {\r\n            return;\r\n        }\r\n\r\n        console.log(`[PreviewProvider] Switching to platform: ${platform}`);\r\n        if (this._platformManager.setPlatform(platform)) {\r\n            if (this._currentDocument) {\r\n                await this.updatePreview(this._currentDocument);\r\n            }\r\n        } else {\r\n            vscode.window.showWarningMessage(`Neznana platforma: ${platform}`);\r\n        }\r\n    }\r\n\r\n    private _handleZoom(action: string, value?: number) {\r\n        switch (action) {\r\n            case 'in':\r\n                this._zoomManager.zoomIn();\r\n                break;\r\n            case 'out':\r\n                this._zoomManager.zoomOut();\r\n                break;\r\n            case 'fit':\r\n                this._currentPanel?.webview.postMessage({ type: 'fitToViewport' });\r\n                break;\r\n            case 'actual':\r\n                this._zoomManager.zoomActualSize();\r\n                break;\r\n            case 'set':\r\n                if (typeof value === 'number') {\r\n                    this._zoomManager.setZoom(value);\r\n                }\r\n                break;\r\n        }\r\n\r\n        this._currentPanel?.webview.postMessage({\r\n            type: 'updateZoom',\r\n            zoom: this._zoomManager.getCurrentZoom()\r\n        });\r\n    }\r\n\r\n    private _sendPropertiesDataToSidebar() {\r\n        if (!this._propertiesProvider) {\r\n            return;\r\n        }\r\n\r\n        this._propertiesProvider.setElements(this._xamlElements);\r\n\r\n        const selectedElement = this._currentSelectedElementId\r\n            ? this._findXamlElementById(this._currentSelectedElementId, this._xamlElements)\r\n            : this._xamlElements[0];\r\n\r\n        this._propertiesProvider.setSelectedElement(selectedElement);\r\n\r\n        if (!this._currentSelectedElementId && selectedElement) {\r\n            this._currentSelectedElementId = selectedElement.id;\r\n        }\r\n    }\r\n\r\n    private async _focusPropertiesView() {\r\n        try {\r\n            await vscode.commands.executeCommand('workbench.view.extension.maui-designer');\r\n            await vscode.commands.executeCommand('mauiProperties.focus');\r\n        } catch (error) {\r\n            console.warn('[PreviewProvider] Unable to focus properties view:', error);\r\n        }\r\n    }\r\n\r\n    private _handleViewModeChange(mode: string) {\r\n        const normalized: 'full' | 'selected' = mode === 'selected' ? 'selected' : 'full';\r\n        this._viewMode = normalized;\r\n\r\n        const activeId = this._getActiveElementId();\r\n        if (!this._currentSelectedElementId && activeId) {\r\n            this._currentSelectedElementId = activeId;\r\n        }\r\n\r\n        this._applyViewModeToWebview(activeId);\r\n    }\r\n\r\n    private _applyViewModeToWebview(selectedId?: string) {\r\n        if (!this._currentPanel) {\r\n            return;\r\n        }\r\n\r\n        const targetId = selectedId ?? this._getActiveElementId();\r\n        this._currentPanel.webview.postMessage({\r\n            type: 'applyViewMode',\r\n            mode: this._viewMode,\r\n            selectedId: targetId\r\n        });\r\n    }\r\n\r\n    private _getActiveElementId(): string | undefined {\r\n        if (this._currentSelectedElementId) {\r\n            return this._currentSelectedElementId;\r\n        }\r\n        return this._xamlElements.length > 0 ? this._xamlElements[0].id : undefined;\r\n    }\r\n\r\n    private _sendElementPropertiesToSidebar(elementId: string) {\r\n        if (!this._propertiesProvider) {\r\n            return;\r\n        }\r\n\r\n        const element = this._findXamlElementById(elementId, this._xamlElements);\r\n        if (element) {\r\n            this._currentSelectedElementId = elementId;\r\n            this._propertiesProvider.setSelectedElement(element);\r\n        }\r\n    }\r\n\r\n    private _findXamlElementById(id: string | undefined, elements: XamlElement[]): XamlElement | undefined {\r\n        if (!id) {\r\n            return undefined;\r\n        }\r\n\r\n        const stack: XamlElement[] = [...elements];\r\n        while (stack.length) {\r\n            const current = stack.shift()!;\r\n            if (current.id === id) {\r\n                return current;\r\n            }\r\n            stack.unshift(...current.children);\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    private _initializeThemeColors() {\r\n        this._themeColors.clear();\r\n        this._themeColors.set('Primary', '#007acc');\r\n        this._themeColors.set('Secondary', '#6c757d');\r\n        this._themeColors.set('Success', '#28a745');\r\n        this._themeColors.set('Info', '#17a2b8');\r\n        this._themeColors.set('Warning', '#ffc107');\r\n        this._themeColors.set('Danger', '#dc3545');\r\n        this._themeColors.set('Light', '#f8f9fa');\r\n        this._themeColors.set('Dark', '#343a40');\r\n\r\n        for (const resource of this._resources) {\r\n            if (resource.type === 'Color') {\r\n                this._themeColors.set(resource.key, resource.value);\r\n            }\r\n        }\r\n\r\n        console.log(`[PreviewProvider] Initialized ${this._themeColors.size} theme colors`);\r\n    }\r\n\r\n    private _parseXamlDocument(xamlContent: string): ParsedElement[] {\r\n        this._elementIdCounter = 0;\r\n        const parsedElements: ParsedElement[] = [];\r\n\r\n        if (!xamlContent.trim()) {\r\n            return parsedElements;\r\n        }\r\n\r\n        try {\r\n            const parsed = this._xmlParser.parse(xamlContent);\r\n            for (const key in parsed) {\r\n                const value = parsed[key];\r\n                const nodes = Array.isArray(value) ? value : [value];\r\n                for (const node of nodes) {\r\n                    const element = this._convertNodeToElement(key, node);\r\n                    if (element) {\r\n                        parsedElements.push(element);\r\n                    }\r\n                }\r\n            }\r\n        } catch (error) {\r\n            console.error('[PreviewProvider] Error parsing XAML:', error);\r\n        }\r\n\r\n        parsedElements.forEach(element => this._finalizeElementAttributes(element));\r\n        return parsedElements;\r\n    }\r\n\r\n    private _convertNodeToElement(type: string, node: any): ParsedElement | null {\r\n        if (node === null || node === undefined) {\r\n            return null;\r\n        }\r\n\r\n        if (typeof node === 'string') {\r\n            if (!node.trim()) {\r\n                return null;\r\n            }\r\n            return {\r\n                id: this._nextElementId(),\r\n                type,\r\n                attributes: {},\r\n                resolvedAttributes: {},\r\n                children: [],\r\n                textContent: node.trim(),\r\n                metadata: {}\r\n            };\r\n        }\r\n\r\n        if (typeof node !== 'object') {\r\n            return null;\r\n        }\r\n\r\n        const element: ParsedElement = {\r\n            id: this._nextElementId(),\r\n            type,\r\n            attributes: {},\r\n            resolvedAttributes: {},\r\n            children: [],\r\n            metadata: {}\r\n        };\r\n\r\n        for (const key in node) {\r\n            const value = node[key];\r\n            if (key.startsWith('@_')) {\r\n                const attrName = key.substring(2);\r\n                element.attributes[attrName] = value !== undefined && value !== null ? String(value).trim() : '';\r\n            } else if (key === '#text') {\r\n                if (typeof value === 'string' && value.trim()) {\r\n                    element.textContent = value.trim();\r\n                }\r\n            } else if (key.includes('.')) {\r\n                this._applyElementProperty(element, key, value);\r\n            } else {\r\n                const children = Array.isArray(value) ? value : [value];\r\n                for (const child of children) {\r\n                    const childElement = this._convertNodeToElement(key, child);\r\n                    if (childElement) {\r\n                        element.children.push(childElement);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        element.name = element.attributes['x:Name'] || element.attributes['Name'];\r\n        return element;\r\n    }\r\n\r\n    private _applyElementProperty(element: ParsedElement, propertyKey: string, rawValue: any) {\r\n        const [owner, property] = propertyKey.split('.', 2);\r\n        if (owner !== element.type) {\r\n            return;\r\n        }\r\n\r\n        switch (property) {\r\n            case 'Content':\r\n            case 'Children':\r\n                this._appendPropertyChildren(element, rawValue);\r\n                break;\r\n            case 'RowDefinitions':\r\n                element.metadata.gridRows = this._extractGridDefinitions(rawValue, 'RowDefinition', 'Height');\r\n                break;\r\n            case 'ColumnDefinitions':\r\n                element.metadata.gridColumns = this._extractGridDefinitions(rawValue, 'ColumnDefinition', 'Width');\r\n                break;\r\n            case 'StrokeShape':\r\n                this._extractStrokeShape(element, rawValue);\r\n                break;\r\n            case 'Resources':\r\n                break;\r\n            default:\r\n                this._appendPropertyChildren(element, rawValue);\r\n                break;\r\n        }\r\n    }\r\n\r\n    private _appendPropertyChildren(element: ParsedElement, propertyValue: any) {\r\n        if (!propertyValue || typeof propertyValue !== 'object') {\r\n            return;\r\n        }\r\n\r\n        for (const key in propertyValue) {\r\n            if (key.startsWith('@_') || key === '#text') {\r\n                continue;\r\n            }\r\n\r\n            const value = propertyValue[key];\r\n            const nodes = Array.isArray(value) ? value : [value];\r\n            for (const node of nodes) {\r\n                const childElement = this._convertNodeToElement(key, node);\r\n                if (childElement) {\r\n                    element.children.push(childElement);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private _extractGridDefinitions(propertyValue: any, elementName: string, attributeName: string): string[] {\r\n        const result: string[] = [];\r\n        if (!propertyValue || typeof propertyValue !== 'object') {\r\n            return result;\r\n        }\r\n\r\n        const definitions = propertyValue[elementName];\r\n        const defArray = Array.isArray(definitions) ? definitions : definitions ? [definitions] : [];\r\n        for (const def of defArray) {\r\n            if (def && typeof def === 'object') {\r\n                const value = def[`@_${attributeName}`] ?? def[attributeName] ?? def['#text'];\r\n                result.push(value ? String(value).trim() : '*');\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    private _extractStrokeShape(element: ParsedElement, propertyValue: any) {\r\n        if (!propertyValue || typeof propertyValue !== 'object') {\r\n            return;\r\n        }\r\n\r\n        const shape = propertyValue['RoundRectangle'];\r\n        if (!shape) {\r\n            return;\r\n        }\r\n\r\n        const shapes = Array.isArray(shape) ? shape : [shape];\r\n        for (const item of shapes) {\r\n            if (item && typeof item === 'object') {\r\n                const corner = item['@_CornerRadius'] ?? item['CornerRadius'];\r\n                if (corner) {\r\n                    element.metadata.cornerRadius = String(corner).trim();\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private _finalizeElementAttributes(element: ParsedElement) {\r\n        const resolved: Record<string, string> = { ...element.attributes };\r\n\r\n        const styleKey = this._extractResourceKey(resolved['Style']);\r\n        if (styleKey) {\r\n            const styleResource = this._resourceManager.resolveStyleResource(styleKey, this._styles);\r\n            if (styleResource) {\r\n                for (const setter in styleResource.setters) {\r\n                    if (!resolved[setter]) {\r\n                        resolved[setter] = styleResource.setters[setter];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        for (const key of Object.keys(resolved)) {\r\n            if (key.toLowerCase().includes('color')) {\r\n                const color = this._resolveColor(resolved[key]);\r\n                if (color) {\r\n                    resolved[key] = color;\r\n                }\r\n            } else if (resolved[key] && resolved[key].startsWith('{StaticResource')) {\r\n                const resourceKey = this._extractResourceKey(resolved[key]);\r\n                if (resourceKey) {\r\n                    const resourceValue = this._resourceManager.resolveStaticResource(resourceKey, this._resources);\r\n                    if (resourceValue) {\r\n                        resolved[key] = resourceValue;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        element.resolvedAttributes = resolved;\r\n        element.children.forEach(child => this._finalizeElementAttributes(child));\r\n    }\r\n\r\n    private _extractResourceKey(value?: string): string | undefined {\r\n        if (!value) {\r\n            return undefined;\r\n        }\r\n        const match = value.match(/\\{(?:StaticResource|DynamicResource)\\s+([^}]+)\\}/);\r\n        return match ? match[1].trim() : undefined;\r\n    }\r\n\r\n    private _indexParsedElements() {\r\n        this._elementLookup.clear();\r\n        const stack = [...this._parsedElements];\r\n        while (stack.length) {\r\n            const element = stack.shift()!;\r\n            this._elementLookup.set(element.id, element);\r\n            stack.unshift(...element.children);\r\n        }\r\n    }\r\n\r\n    private _assignElementPositions(xamlContent: string) {\r\n        this._elementMap.clear();\r\n        const lineOffsets = this._calculateLineOffsets(xamlContent);\r\n        let searchIndex = 0;\r\n\r\n        const assign = (element: ParsedElement) => {\r\n            const regex = new RegExp(`<${element.type}(?:[\\n\\r\\s>])`, 'g');\r\n            regex.lastIndex = searchIndex;\r\n            const match = regex.exec(xamlContent);\r\n            if (match) {\r\n                const startIndex = match.index;\r\n                const startLine = this._getLineForIndex(startIndex, lineOffsets);\r\n                element.metadata.startIndex = startIndex;\r\n                element.metadata.startLine = startLine;\r\n\r\n                const closingTag = `</${element.type}>`;\r\n                const closingIndex = xamlContent.indexOf(closingTag, startIndex);\r\n                const endLine = closingIndex !== -1 ? this._getLineForIndex(closingIndex, lineOffsets) : startLine;\r\n\r\n                this._elementMap.set(element.id, {\r\n                    startLine,\r\n                    endLine,\r\n                    elementName: element.type\r\n                });\r\n\r\n                searchIndex = regex.lastIndex;\r\n            }\r\n\r\n            element.children.forEach(assign);\r\n        };\r\n\r\n        this._parsedElements.forEach(assign);\r\n    }\r\n\r\n    private _calculateLineOffsets(text: string): number[] {\r\n        const offsets: number[] = [0];\r\n        for (let i = 0; i < text.length; i++) {\r\n            if (text[i] === '\\n') {\r\n                offsets.push(i + 1);\r\n            }\r\n        }\r\n        return offsets;\r\n    }\r\n\r\n    private _getLineForIndex(index: number, offsets: number[]): number {\r\n        if (index <= 0) {\r\n            return 0;\r\n        }\r\n        let low = 0;\r\n        let high = offsets.length - 1;\r\n        while (low <= high) {\r\n            const mid = Math.floor((low + high) / 2);\r\n            if (offsets[mid] === index) {\r\n                return mid;\r\n            }\r\n            if (offsets[mid] < index) {\r\n                low = mid + 1;\r\n            } else {\r\n                high = mid - 1;\r\n            }\r\n        }\r\n        return Math.max(0, low - 1);\r\n    }\r\n\r\n    private _generatePreviewHtml(): string {\r\n        const platformSelector = this._platformManager.generatePlatformSelectorHtml();\r\n        const deviceFrameCss = this._platformManager.generateDeviceFrameCss();\r\n        const statusBarContent = this._platformManager.generateStatusBarContent();\r\n        const navigationBarContent = this._platformManager.generateNavigationBarContent();\r\n        const platformSwitchScript = this._platformManager.generatePlatformSwitchScript();\r\n        const zoomScript = this._zoomManager.getWebviewZoomScript();\r\n        const renderedContent = this._renderElements(this._parsedElements);\r\n\r\n        return `<!DOCTYPE html>\r\n<html lang=\"en\">\r\n<head>\r\n<meta charset=\"UTF-8\" />\r\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n<title>MAUI XAML Preview</title>\r\n<style>\r\n    :root {\r\n        color-scheme: light;\r\n        font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\r\n    }\r\n\r\n    body {\r\n        margin: 0;\r\n        padding: 20px;\r\n        background: #f5f5f5;\r\n        overflow: auto;\r\n    }\r\n\r\n    .preview-container {\r\n        max-width: 100%;\r\n        margin: 0 auto;\r\n    }\r\n\r\n    .toolbar {\r\n        background: white;\r\n        border-radius: 8px;\r\n        padding: 16px;\r\n        margin-bottom: 16px;\r\n        box-shadow: 0 2px 8px rgba(0,0,0,0.08);\r\n        display: flex;\r\n        flex-wrap: wrap;\r\n        gap: 16px;\r\n        align-items: center;\r\n    }\r\n\r\n    .zoom-controls {\r\n        display: flex;\r\n        align-items: center;\r\n        gap: 8px;\r\n        border: 1px solid #d0d0d0;\r\n        border-radius: 6px;\r\n        padding: 4px;\r\n        background: #fafafa;\r\n    }\r\n\r\n    .zoom-btn {\r\n        padding: 6px 12px;\r\n        border: none;\r\n        background: transparent;\r\n        cursor: pointer;\r\n        border-radius: 4px;\r\n        font-size: 14px;\r\n    }\r\n\r\n    .zoom-btn:hover {\r\n        background: #e9f3ff;\r\n    }\r\n\r\n    .zoom-level {\r\n        font-weight: 600;\r\n        min-width: 48px;\r\n        text-align: center;\r\n    }\r\n\r\n    .view-mode-toggle {\r\n        display: flex;\r\n        align-items: center;\r\n        gap: 8px;\r\n        border: 1px solid #d0d0d0;\r\n        border-radius: 6px;\r\n        padding: 4px;\r\n        background: #fafafa;\r\n    }\r\n\r\n    .view-btn {\r\n        padding: 6px 12px;\r\n        border: none;\r\n        background: transparent;\r\n        cursor: pointer;\r\n        border-radius: 4px;\r\n        font-size: 14px;\r\n        transition: background 0.15s ease, color 0.15s ease;\r\n    }\r\n\r\n    .view-btn:hover {\r\n        background: #e9f3ff;\r\n    }\r\n\r\n    .view-btn.active {\r\n        background: #007acc;\r\n        color: white;\r\n    }\r\n\r\n    .preview-viewport {\r\n        background: white;\r\n        border-radius: 12px;\r\n        padding: 20px;\r\n        box-shadow: 0 8px 24px rgba(15,22,33,0.1);\r\n        min-height: 420px;\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: flex-start;\r\n    }\r\n\r\n    ${deviceFrameCss}\r\n\r\n    .content-area {\r\n        position: relative;\r\n    }\r\n\r\n    .xaml-root {\r\n        width: 100%;\r\n        height: 100%;\r\n    }\r\n\r\n    .maui-element {\r\n        box-sizing: border-box;\r\n        position: relative;\r\n        transition: box-shadow 0.15s ease, transform 0.15s ease;\r\n        cursor: pointer;\r\n    }\r\n\r\n    .maui-element:hover {\r\n        box-shadow: 0 0 0 2px rgba(0,122,204,0.18);\r\n    }\r\n\r\n    .maui-element.hidden-element {\r\n        display: none !important;\r\n    }\r\n\r\n    .maui-element.focused-element {\r\n        box-shadow: 0 0 0 2px rgba(37,99,235,0.35), 0 8px 18px rgba(37,99,235,0.15);\r\n    }\r\n\r\n    .maui-element.ancestor-element {\r\n        outline: 1px dashed rgba(37,99,235,0.35);\r\n    }\r\n\r\n    .maui-stacklayout {\r\n        display: flex;\r\n        flex-direction: column;\r\n        gap: 8px;\r\n        width: 100%;\r\n    }\r\n\r\n    .maui-stacklayout.is-horizontal {\r\n        flex-direction: row;\r\n    }\r\n\r\n    .maui-grid {\r\n        display: grid;\r\n        width: 100%;\r\n        gap: 8px;\r\n    }\r\n\r\n    .maui-label {\r\n        display: block;\r\n        padding: 2px 0;\r\n        color: #1f2933;\r\n        white-space: pre-wrap;\r\n    }\r\n\r\n    .maui-button {\r\n        display: inline-flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        padding: 8px 18px;\r\n        border-radius: 8px;\r\n        border: none;\r\n        font-weight: 600;\r\n        background: #2563eb;\r\n        color: white;\r\n        box-shadow: 0 3px 10px rgba(37,99,235,0.25);\r\n    }\r\n\r\n    .maui-button:disabled {\r\n        opacity: 0.6;\r\n    }\r\n\r\n    .maui-border {\r\n        border: 1px solid #d0d0d0;\r\n        border-radius: 10px;\r\n        padding: 12px;\r\n        background: #ffffff;\r\n    }\r\n\r\n    .maui-frame {\r\n        border-radius: 12px;\r\n        padding: 12px;\r\n        background: #ffffff;\r\n        box-shadow: 0 6px 16px rgba(15,22,33,0.08);\r\n    }\r\n\r\n    .maui-boxview {\r\n        min-height: 24px;\r\n    }\r\n\r\n    .maui-scrollview {\r\n        max-height: 100%;\r\n        overflow: auto;\r\n    }\r\n\r\n    .binding-placeholder {\r\n        font-style: italic;\r\n        color: #64748b;\r\n    }\r\n\r\n    .structure-outline {\r\n        border: 1px dashed rgba(148,163,184,0.6);\r\n        border-radius: 6px;\r\n    }\r\n</style>\r\n</head>\r\n<body>\r\n<div class=\"preview-container\">\r\n    <div class=\"toolbar\">\r\n        <div class=\"zoom-controls\">\r\n            <button id=\"zoomOut\" class=\"zoom-btn\" title=\"Zoom Out\">−</button>\r\n            <div id=\"zoomLevel\" class=\"zoom-level\">${this._zoomManager.getCurrentZoom()}%</div>\r\n            <button id=\"zoomIn\" class=\"zoom-btn\" title=\"Zoom In\">+</button>\r\n            <button id=\"zoomFit\" class=\"zoom-btn\" title=\"Fit to Window\">⌂</button>\r\n            <button id=\"zoomActual\" class=\"zoom-btn\" title=\"Actual Size\">1:1</button>\r\n        </div>\r\n        <div class=\"view-mode-toggle\">\r\n            <button class=\"view-btn ${this._viewMode === 'full' ? 'active' : ''}\" data-mode=\"full\" title=\"Prikaži celotno hierarhijo\">Celoten pogled</button>\r\n            <button class=\"view-btn ${this._viewMode === 'selected' ? 'active' : ''}\" data-mode=\"selected\" title=\"Prikaži samo izbrani element\">Izbrani element</button>\r\n        </div>\r\n        ${platformSelector}\r\n    </div>\r\n    <div class=\"preview-viewport\">\r\n        <div class=\"device-wrapper\">\r\n            <div class=\"device-frame\" id=\"deviceFrame\">\r\n                <div class=\"device-screen\">\r\n                    ${statusBarContent ? `<div class=\"status-bar\">${statusBarContent}</div>` : ''}\r\n                    ${navigationBarContent ? `<div class=\"navigation-bar\">${navigationBarContent}</div>` : ''}\r\n                    <div class=\"content-area\">\r\n                        <div class=\"xaml-root\">\r\n                            ${renderedContent}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<script>\r\n    const vscode = acquireVsCodeApi();\r\n    ${platformSwitchScript}\r\n    ${zoomScript}\r\n\r\n    let currentViewMode = '${this._viewMode}';\r\n\r\n    // Helpers for mapping MAUI-like values to CSS\r\n    const toPx = (v) => {\r\n        if (v == null) return '';\r\n        const s = String(v).trim();\r\n        if (!s) return '';\r\n        // Preserve if looks like CSS unit already\r\n        if (/^(\\d+\\.?\\d*)(px|em|rem|%)$/i.test(s)) return s;\r\n        // number -> px\r\n        if (/^\\d+(\\.\\d+)?$/.test(s)) return s + 'px';\r\n        return s;\r\n    };\r\n\r\n    const parseThickness = (val) => {\r\n        if (!val && val !== 0) return '';\r\n        const raw = String(val).trim();\r\n        if (!raw) return '';\r\n        // Allow comma or space separated\r\n        const parts = raw.split(/[ ,]+/).filter(Boolean).map(n => n.trim());\r\n        if (parts.length === 1) {\r\n            const a = toPx(parts[0]);\r\n            return a + ' ' + a + ' ' + a + ' ' + a;\r\n        }\r\n        if (parts.length === 2) {\r\n            // MAUI: h, v -> CSS: top right bottom left = v h v h\r\n            const h = toPx(parts[0]);\r\n            const v = toPx(parts[1]);\r\n            return v + ' ' + h + ' ' + v + ' ' + h;\r\n        }\r\n        if (parts.length === 4) {\r\n            const t = toPx(parts[0]);\r\n            const r = toPx(parts[1]);\r\n            const b = toPx(parts[2]);\r\n            const l = toPx(parts[3]);\r\n            return t + ' ' + r + ' ' + b + ' ' + l;\r\n        }\r\n        // Fallback: join as-is\r\n        return parts.map(toPx).join(' ');\r\n    };\r\n\r\n    const parseCornerRadius = (val) => {\r\n        if (!val && val !== 0) return '';\r\n        const raw = String(val).trim();\r\n        if (!raw) return '';\r\n        const parts = raw.split(/[ ,]+/).filter(Boolean).map(n => n.trim());\r\n        if (parts.length === 1) {\r\n            const a = toPx(parts[0]);\r\n            return a;\r\n        }\r\n        if (parts.length === 2) {\r\n            // CSS semantics: tl/br then tr/bl\r\n            const a = toPx(parts[0]);\r\n            const b = toPx(parts[1]);\r\n            return a + ' ' + b;\r\n        }\r\n        if (parts.length === 3) {\r\n            // CSS: tl tr br\r\n            const a = toPx(parts[0]);\r\n            const b = toPx(parts[1]);\r\n            const c = toPx(parts[2]);\r\n            return a + ' ' + b + ' ' + c;\r\n        }\r\n        if (parts.length >= 4) {\r\n            // Assume order tl, tr, br, bl which matches CSS\r\n            const tl = toPx(parts[0]);\r\n            const tr = toPx(parts[1]);\r\n            const br = toPx(parts[2]);\r\n            const bl = toPx(parts[3]);\r\n            return tl + ' ' + tr + ' ' + br + ' ' + bl;\r\n        }\r\n        return '';\r\n    };\r\n\r\n    const setViewModeButtons = (mode) => {\r\n        document.querySelectorAll('.view-btn').forEach(btn => {\r\n            btn.classList.toggle('active', btn.getAttribute('data-mode') === mode);\r\n        });\r\n    };\r\n\r\n    const applyViewMode = (mode, selectedId) => {\r\n        currentViewMode = mode || currentViewMode || 'full';\r\n        setViewModeButtons(currentViewMode);\r\n\r\n        const root = document.querySelector('.xaml-root');\r\n        if (!root) {\r\n            return;\r\n        }\r\n\r\n        const elements = root.querySelectorAll('.maui-element');\r\n        elements.forEach(el => el.classList.remove('hidden-element', 'focused-element', 'ancestor-element'));\r\n\r\n        if (currentViewMode !== 'selected' || !selectedId) {\r\n            return;\r\n        }\r\n\r\n        elements.forEach(el => el.classList.add('hidden-element'));\r\n\r\n        const target = root.querySelector('[data-element-id=\"' + selectedId + '\"]');\r\n        if (!target) {\r\n            elements.forEach(el => el.classList.remove('hidden-element'));\r\n            return;\r\n        }\r\n\r\n        target.classList.remove('hidden-element');\r\n        target.classList.add('focused-element');\r\n\r\n        target.querySelectorAll('.maui-element').forEach(child => child.classList.remove('hidden-element'));\r\n\r\n        let ancestor = target.parentElement ? target.parentElement.closest('.maui-element') : null;\r\n        while (ancestor) {\r\n            ancestor.classList.remove('hidden-element');\r\n            ancestor.classList.add('ancestor-element');\r\n            ancestor = ancestor.parentElement ? ancestor.parentElement.closest('.maui-element') : null;\r\n        }\r\n    };\r\n\r\n    const setupViewModeToggle = () => {\r\n        const buttons = document.querySelectorAll('.view-btn');\r\n        if (!buttons.length) {\r\n            return;\r\n        }\r\n\r\n        const activeButton = document.querySelector('.view-btn.active');\r\n        if (activeButton) {\r\n            currentViewMode = activeButton.getAttribute('data-mode') || 'full';\r\n        }\r\n\r\n        buttons.forEach(btn => {\r\n            btn.addEventListener('click', (event) => {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                const mode = btn.getAttribute('data-mode') || 'full';\r\n                if (mode === currentViewMode) {\r\n                    return;\r\n                }\r\n                vscode.postMessage({ command: 'changeViewMode', mode });\r\n            });\r\n        });\r\n    };\r\n\r\n    setupViewModeToggle();\r\n    applyViewMode(currentViewMode);\r\n\r\n    const notifySelection = (element) => {\r\n        if (!element) return;\r\n        vscode.postMessage({\r\n            command: 'elementSelected',\r\n            elementId: element.getAttribute('data-element-id'),\r\n            line: element.getAttribute('data-line')\r\n        });\r\n    };\r\n\r\n    document.addEventListener('click', (event) => {\r\n        const target = event.target.closest('.maui-element');\r\n        if (!target) {\r\n            return;\r\n        }\r\n\r\n        document.querySelectorAll('.maui-element.selected').forEach(el => el.classList.remove('selected'));\r\n        target.classList.add('selected');\r\n        applyViewMode(currentViewMode, target.getAttribute('data-element-id'));\r\n        notifySelection(target);\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n    });\r\n\r\n    // Ensure platform buttons work even if inline handler is blocked\r\n    setTimeout(() => {\r\n        document.querySelectorAll('.platform-btn').forEach(btn => {\r\n            btn.addEventListener('click', (e) => {\r\n                const pf = btn.getAttribute('data-platform');\r\n                if (pf && typeof window.switchPlatform === 'function') {\r\n                    window.switchPlatform(pf);\r\n                }\r\n            }, { once: false });\r\n        });\r\n    }, 0);\r\n\r\n    window.addEventListener('message', (event) => {\r\n        const message = event.data;\r\n        if (!message) {\r\n            return;\r\n        }\r\n\r\n        if (message.type === 'updateZoom' && window.webViewZoomManager) {\r\n            window.webViewZoomManager.setZoom(message.zoom);\r\n        }\r\n\r\n        if (message.type === 'fitToViewport' && window.webViewZoomManager) {\r\n            window.webViewZoomManager.fitToViewport();\r\n        }\r\n\r\n        if (message.type === 'applyViewMode') {\r\n            applyViewMode(message.mode, message.selectedId);\r\n        }\r\n\r\n        if (message.type === 'updateProperty') {\r\n            try {\r\n                const selected = document.querySelector('.maui-element.selected');\r\n                if (selected) {\r\n                    const key = message.property || '';\r\n                    const val = String(message.value ?? '').trim();\r\n\r\n                    const setStyle = (k, v) => selected && (selected.style[k] = v);\r\n                    const px = (v) => (/^\\d+(\\.\\d+)?$/.test(v) ? (v + 'px') : v);\r\n\r\n                    const kLower = key.toLowerCase();\r\n                    if (kLower === 'background' || kLower.includes('backgroundcolor')) setStyle('backgroundColor', val);\r\n                    else if (kLower.includes('textcolor') || kLower === 'color') setStyle('color', val);\r\n                    else if (kLower === 'widthrequest' || kLower === 'width') setStyle('width', px(val));\r\n                    else if (kLower === 'heightrequest' || kLower === 'height') setStyle('height', px(val));\r\n                    else if (kLower === 'maxwidthrequest' || kLower === 'maxwidth') setStyle('maxWidth', px(val));\r\n                    else if (kLower === 'maxheightrequest' || kLower === 'maxheight') setStyle('maxHeight', px(val));\r\n                    else if (kLower === 'minwidthrequest' || kLower === 'minwidth') setStyle('minWidth', px(val));\r\n                    else if (kLower === 'minheightrequest' || kLower === 'minheight') setStyle('minHeight', px(val));\r\n                    else if (kLower === 'padding') setStyle('padding', parseThickness(val));\r\n                    else if (kLower === 'margin') setStyle('margin', parseThickness(val));\r\n                    else if (kLower === 'cornerradius') setStyle('borderRadius', parseCornerRadius(val));\r\n                    else if (kLower === 'bordercolor' || kLower === 'stroke') setStyle('borderColor', val);\r\n                    else if (kLower === 'borderthickness' || kLower === 'strokethickness') setStyle('borderWidth', parseThickness(val));\r\n                    else if (kLower === 'grid.row') setStyle('gridRowStart', val);\r\n                    else if (kLower === 'grid.column') setStyle('gridColumnStart', val);\r\n                    else if (kLower === 'grid.rowspan') selected.style.gridRowEnd = 'span ' + (parseInt(val, 10) || 1);\r\n                    else if (kLower === 'grid.columnspan') selected.style.gridColumnEnd = 'span ' + (parseInt(val, 10) || 1);\r\n                    else if (kLower === 'opacity') setStyle('opacity', val);\r\n                    else if (kLower === 'isvisible') setStyle('display', (val.toLowerCase() === 'false' || val === '0') ? 'none' : '');\r\n                    else if (kLower === 'isenabled') { setStyle('pointerEvents', (val.toLowerCase() === 'false' || val === '0') ? 'none' : ''); setStyle('opacity', (val.toLowerCase() === 'false' || val === '0') ? '0.6' : ''); }\r\n                    else if (kLower === 'fontsize') setStyle('fontSize', px(val));\r\n                    else if (kLower === 'fontfamily') setStyle('fontFamily', val);\r\n                    else if (kLower === 'lineheight') setStyle('lineHeight', val);\r\n                    else if (kLower === 'characterspacing') setStyle('letterSpacing', px(val));\r\n                    else if (kLower === 'textdecorations') setStyle('textDecoration', val.toLowerCase());\r\n                    else if (kLower === 'fontattributes') {\r\n                        const low = val.toLowerCase();\r\n                        if (low.includes('bold')) setStyle('fontWeight', '600');\r\n                        else setStyle('fontWeight', '');\r\n                        if (low.includes('italic')) setStyle('fontStyle', 'italic');\r\n                        else setStyle('fontStyle', '');\r\n                    }\r\n                    else if (kLower === 'horizontaltextalignment' || kLower === 'textalignment') {\r\n                        const map = { start: 'left', center: 'center', end: 'right' };\r\n                        setStyle('textAlign', map[val.toLowerCase()] || val);\r\n                    }\r\n                    else if (kLower === 'horizontaloptions') {\r\n                        const low = val.toLowerCase();\r\n                        const map = { start: 'flex-start', center: 'center', end: 'flex-end', fill: 'stretch' };\r\n                        setStyle('alignSelf', map[low] || '');\r\n                    }\r\n                    else if (kLower === 'verticaloptions') {\r\n                        const low = val.toLowerCase();\r\n                        const map = { start: 'flex-start', center: 'center', end: 'flex-end', fill: 'stretch' };\r\n                        setStyle('alignSelf', map[low] || '');\r\n                    }\r\n                    else if (kLower === 'aspect') {\r\n                        const map = { aspectfit: 'contain', aspectfill: 'cover', fill: 'fill' };\r\n                        setStyle('objectFit', map[val.toLowerCase()] || 'contain');\r\n                    }\r\n\r\n                    if (key === 'Text') {\r\n                        selected.innerText = val;\r\n                    }\r\n                }\r\n            } catch (e) {\r\n                console.warn('[Webview] Failed to apply property update', e);\r\n            }\r\n        }\r\n    });\r\n\r\n    vscode.postMessage({ command: 'ready' });\r\n</script>\r\n</body>\r\n</html>`;\r\n    }\r\n\r\n    private _renderElements(elements: ParsedElement[]): string {\r\n        return elements.map(element => this._renderElement(element)).join('');\r\n    }\r\n\r\n    private _renderElement(element: ParsedElement): string {\r\n        const classes = ['maui-element'];\r\n        const typeClass = `maui-${element.type.toLowerCase()}`;\r\n        classes.push(typeClass);\r\n\r\n        if (element.type === 'StackLayout') {\r\n            const orientation = (element.resolvedAttributes['Orientation'] || '').toLowerCase();\r\n            if (orientation === 'horizontal') {\r\n                classes.push('is-horizontal');\r\n            }\r\n        }\r\n\r\n        const style = this._buildInlineStyle(element);\r\n        const styleAttr = style ? ` style=\"${style}\"` : '';\r\n        const dataId = `data-element-id=\"${element.id}\"`;\r\n        const dataLine = element.metadata.startLine !== undefined ? ` data-line=\"${element.metadata.startLine}\"` : '';\r\n        const titleAttr = ` title=\"${element.type}${element.name ? ' • ' + element.name : ''}\"`;\r\n\r\n        const childrenHtml = element.children.map(child => this._renderElement(child)).join('');\r\n        const text = this._renderElementText(element);\r\n\r\n        switch (element.type) {\r\n            case 'Label':\r\n                return `<div class=\"${classes.join(' ')}\" ${dataId}${dataLine}${styleAttr}${titleAttr}>${text}</div>`;\r\n            case 'Button':\r\n                return `<button class=\"${classes.join(' ')}\" ${dataId}${dataLine}${styleAttr}${titleAttr}>${text || 'Button'}</button>`;\r\n            case 'Entry':\r\n                return `<input class=\"${classes.join(' ')}\" ${dataId}${dataLine}${styleAttr}${titleAttr} value=\"${this._escapeHtml(text || '')}\" placeholder=\"Entry\" />`;\r\n            case 'Editor':\r\n                return `<textarea class=\"${classes.join(' ')}\" ${dataId}${dataLine}${styleAttr}${titleAttr}>${this._escapeHtml(text || '')}</textarea>`;\r\n            case 'ScrollView':\r\n                return `<div class=\"${classes.join(' ')}\" ${dataId}${dataLine}${styleAttr}${titleAttr}><div class=\"scroll-content\">${childrenHtml}</div></div>`;\r\n            case 'Image':\r\n                return `<div class=\"${classes.join(' ')}\" ${dataId}${dataLine}${styleAttr}${titleAttr}><span class=\"binding-placeholder\">${text || 'Image'}</span></div>`;\r\n            default:\r\n                return `<div class=\"${classes.join(' ')}\" ${dataId}${dataLine}${styleAttr}${titleAttr}>${text}${childrenHtml}</div>`;\r\n        }\r\n    }\r\n\r\n    private _renderElementText(element: ParsedElement): string {\r\n        const textValue = element.resolvedAttributes['Text'] ?? element.textContent;\r\n        if (!textValue) {\r\n            return '';\r\n        }\r\n\r\n        const bindingMatch = textValue.match(/\\{Binding\\s+([^}]+)\\}/i);\r\n        if (bindingMatch) {\r\n            return `<span class=\"binding-placeholder\">Binding: ${this._escapeHtml(bindingMatch[1])}</span>`;\r\n        }\r\n\r\n        return this._escapeHtml(textValue);\r\n    }\r\n\r\n    private _buildInlineStyle(element: ParsedElement): string {\r\n        const style = new Map<string, string>();\r\n        const attrs = element.resolvedAttributes;\r\n\r\n        const background = attrs['Background'] || attrs['BackgroundColor'];\r\n        const resolvedBackground = this._resolveColor(background);\r\n        if (resolvedBackground) {\r\n            style.set('background-color', resolvedBackground);\r\n        }\r\n\r\n        const textColor = this._resolveColor(attrs['TextColor'] || attrs['Color']);\r\n        if (textColor) {\r\n            style.set('color', textColor);\r\n        }\r\n\r\n        if (attrs['Opacity']) {\r\n            const opacityValue = Number(attrs['Opacity']);\r\n            if (!Number.isNaN(opacityValue)) {\r\n                style.set('opacity', Math.max(0, Math.min(opacityValue, 1)).toString());\r\n            }\r\n        }\r\n\r\n        if (attrs['WidthRequest']) {\r\n            style.set('width', this._toPixels(attrs['WidthRequest']));\r\n        }\r\n\r\n        if (attrs['HeightRequest']) {\r\n            style.set('height', this._toPixels(attrs['HeightRequest']));\r\n        }\r\n\r\n        if (attrs['MinWidth']) {\r\n            style.set('min-width', this._toPixels(attrs['MinWidth']));\r\n        }\r\n\r\n        if (attrs['MinHeight']) {\r\n            style.set('min-height', this._toPixels(attrs['MinHeight']));\r\n        }\r\n\r\n        if (attrs['MaxWidth']) {\r\n            style.set('max-width', this._toPixels(attrs['MaxWidth']));\r\n        }\r\n\r\n        if (attrs['MaxHeight']) {\r\n            style.set('max-height', this._toPixels(attrs['MaxHeight']));\r\n        }\r\n\r\n        if (attrs['Padding']) {\r\n            style.set('padding', this._convertThickness(attrs['Padding']));\r\n        }\r\n\r\n        if (attrs['Margin']) {\r\n            style.set('margin', this._convertThickness(attrs['Margin']));\r\n        }\r\n\r\n        if (attrs['HorizontalOptions']) {\r\n            this._applyLayoutOptions(style, 'horizontal', attrs['HorizontalOptions']);\r\n        }\r\n\r\n        if (attrs['VerticalOptions']) {\r\n            this._applyLayoutOptions(style, 'vertical', attrs['VerticalOptions']);\r\n        }\r\n\r\n        if (attrs['FontSize']) {\r\n            style.set('font-size', this._toPixels(attrs['FontSize']));\r\n        }\r\n\r\n        if (attrs['FontAttributes']) {\r\n            const fontAttributes = attrs['FontAttributes'].toLowerCase();\r\n            if (fontAttributes.includes('bold')) {\r\n                style.set('font-weight', '600');\r\n            }\r\n            if (fontAttributes.includes('italic')) {\r\n                style.set('font-style', 'italic');\r\n            }\r\n        }\r\n\r\n        if (attrs['FontFamily']) {\r\n            style.set('font-family', attrs['FontFamily']);\r\n        }\r\n\r\n        if (attrs['HorizontalTextAlignment']) {\r\n            style.set('text-align', attrs['HorizontalTextAlignment'].toLowerCase());\r\n        }\r\n\r\n        if (attrs['LineHeight']) {\r\n            style.set('line-height', attrs['LineHeight']);\r\n        }\r\n\r\n        if (attrs['Grid.Row']) {\r\n            const rowIndex = Number(attrs['Grid.Row']);\r\n            if (!Number.isNaN(rowIndex)) {\r\n                const span = Number(attrs['Grid.RowSpan'] ?? '1');\r\n                const rowValue = `${rowIndex + 1} / span ${Number.isNaN(span) ? 1 : span}`;\r\n                style.set('grid-row', rowValue);\r\n            }\r\n        }\r\n\r\n        if (attrs['Grid.Column']) {\r\n            const colIndex = Number(attrs['Grid.Column']);\r\n            if (!Number.isNaN(colIndex)) {\r\n                const span = Number(attrs['Grid.ColumnSpan'] ?? '1');\r\n                const colValue = `${colIndex + 1} / span ${Number.isNaN(span) ? 1 : span}`;\r\n                style.set('grid-column', colValue);\r\n            }\r\n        }\r\n\r\n        switch (element.type) {\r\n            case 'StackLayout': {\r\n                style.set('display', 'flex');\r\n                const orientation = (attrs['Orientation'] || '').toLowerCase();\r\n                style.set('flex-direction', orientation === 'horizontal' ? 'row' : 'column');\r\n                const spacing = attrs['Spacing'];\r\n                if (spacing) {\r\n                    style.set('gap', this._toPixels(spacing));\r\n                }\r\n                break;\r\n            }\r\n            case 'Grid': {\r\n                style.set('display', 'grid');\r\n                const columns = element.metadata.gridColumns && element.metadata.gridColumns.length\r\n                    ? element.metadata.gridColumns.map(g => this._convertGridLength(g)).join(' ')\r\n                    : '1fr';\r\n                const rows = element.metadata.gridRows && element.metadata.gridRows.length\r\n                    ? element.metadata.gridRows.map(g => this._convertGridLength(g)).join(' ')\r\n                    : 'auto';\r\n                style.set('grid-template-columns', columns);\r\n                style.set('grid-template-rows', rows);\r\n                if (attrs['ColumnSpacing']) {\r\n                    style.set('column-gap', this._toPixels(attrs['ColumnSpacing']));\r\n                }\r\n                if (attrs['RowSpacing']) {\r\n                    style.set('row-gap', this._toPixels(attrs['RowSpacing']));\r\n                }\r\n                break;\r\n            }\r\n            case 'Border':\r\n            case 'Frame': {\r\n                const stroke = this._resolveColor(attrs['Stroke'] || attrs['BorderColor']);\r\n                const strokeThickness = this._toPixels(attrs['StrokeThickness'] || '1');\r\n                style.set('border-style', 'solid');\r\n                style.set('border-width', stroke ? strokeThickness : '1px');\r\n                style.set('border-color', stroke || 'rgba(0,0,0,0.12)');\r\n                const radius = element.metadata.cornerRadius || attrs['CornerRadius'];\r\n                if (radius) {\r\n                    style.set('border-radius', this._convertCornerRadius(radius));\r\n                } else if (element.type === 'Frame') {\r\n                    style.set('border-radius', '12px');\r\n                }\r\n                break;\r\n            }\r\n            case 'BoxView': {\r\n                style.set('min-height', this._toPixels(attrs['HeightRequest'] || '36'));\r\n                style.set('border-radius', this._convertCornerRadius(attrs['CornerRadius'] || '0'));\r\n                break;\r\n            }\r\n            case 'Button': {\r\n                if (!style.has('background-color')) {\r\n                    style.set('background-color', '#2563eb');\r\n                }\r\n                if (!style.has('color')) {\r\n                    style.set('color', '#ffffff');\r\n                }\r\n                style.set('display', 'inline-flex');\r\n                style.set('align-items', 'center');\r\n                style.set('justify-content', 'center');\r\n                break;\r\n            }\r\n            case 'ScrollView': {\r\n                style.set('overflow', 'auto');\r\n                break;\r\n            }\r\n            case 'Label': {\r\n                style.set('display', 'block');\r\n                break;\r\n            }\r\n        }\r\n\r\n        return Array.from(style.entries()).map(([key, value]) => `${key}: ${value}`).join('; ');\r\n    }\r\n\r\n    private _resolveColor(raw?: string, visited: Set<string> = new Set()): string | undefined {\r\n        if (!raw) {\r\n            return undefined;\r\n        }\r\n\r\n        let value = raw.trim();\r\n        if (!value) {\r\n            return undefined;\r\n        }\r\n\r\n        const appThemeMatch = value.match(/\\{AppThemeBinding\\s+Light=([^,}]+)(?:,\\s*Dark=([^}]+))?/i);\r\n        if (appThemeMatch) {\r\n            const lightCandidate = appThemeMatch[1] ? appThemeMatch[1].trim() : undefined;\r\n            if (lightCandidate) {\r\n                const resolved = this._resolveColor(lightCandidate, visited);\r\n                if (resolved) {\r\n                    return resolved;\r\n                }\r\n            }\r\n            const darkCandidate = appThemeMatch[2] ? appThemeMatch[2].trim() : undefined;\r\n            if (darkCandidate) {\r\n                const resolvedDark = this._resolveColor(darkCandidate, visited);\r\n                if (resolvedDark) {\r\n                    return resolvedDark;\r\n                }\r\n            }\r\n        }\r\n\r\n        const resourceKey = this._extractResourceKey(value);\r\n        if (resourceKey && !visited.has(resourceKey)) {\r\n            visited.add(resourceKey);\r\n            const resourceValue = this._resourceManager.resolveStaticResource(resourceKey, this._resources);\r\n            if (resourceValue) {\r\n                const resolved = this._resolveColor(resourceValue, visited);\r\n                if (resolved) {\r\n                    return resolved;\r\n                }\r\n            }\r\n            const themeColor = this._themeColors.get(resourceKey);\r\n            if (themeColor) {\r\n                return themeColor;\r\n            }\r\n        }\r\n\r\n        value = this._normalizeColorValue(value);\r\n        if (!value) {\r\n            return undefined;\r\n        }\r\n\r\n        if (value.startsWith('#') && (value.length === 4 || value.length === 5 || value.length === 7 || value.length === 9)) {\r\n            return value;\r\n        }\r\n\r\n        if (/^(rgb|rgba|hsl|hsla)\\(/i.test(value)) {\r\n            return value;\r\n        }\r\n\r\n        const lower = value.toLowerCase();\r\n        if (COLOR_NAME_MAP[lower]) {\r\n            return COLOR_NAME_MAP[lower];\r\n        }\r\n\r\n        if (this._themeColors.has(value)) {\r\n            return this._themeColors.get(value);\r\n        }\r\n\r\n        return undefined;\r\n    }\r\n\r\n    private _normalizeColorValue(value: string): string {\r\n        const trimmed = value.trim();\r\n        if (!trimmed) {\r\n            return trimmed;\r\n        }\r\n\r\n        if ((trimmed.startsWith('{') && trimmed.endsWith('}')) || (trimmed.startsWith('[') && trimmed.endsWith(']'))) {\r\n            if (trimmed.includes('\"')) {\r\n                try {\r\n                    const parsed = JSON.parse(trimmed);\r\n                    const candidate = this._findColorInParsedValue(parsed);\r\n                    if (candidate) {\r\n                        return candidate;\r\n                    }\r\n                } catch (error) {\r\n                    // ignore JSON parse errors and fall back to trimmed string\r\n                }\r\n            }\r\n        }\r\n\r\n        if (/^Color\\s+/i.test(trimmed)) {\r\n            return trimmed.replace(/^Color\\s+/i, '');\r\n        }\r\n\r\n        return trimmed;\r\n    }\r\n\r\n    private _findColorInParsedValue(value: any): string | undefined {\r\n        if (!value) {\r\n            return undefined;\r\n        }\r\n\r\n        if (typeof value === 'string') {\r\n            return value;\r\n        }\r\n\r\n        if (Array.isArray(value)) {\r\n            for (const item of value) {\r\n                const result = this._findColorInParsedValue(item);\r\n                if (result) {\r\n                    return result;\r\n                }\r\n            }\r\n            return undefined;\r\n        }\r\n\r\n        if (typeof value === 'object') {\r\n            const directKeys = ['@_Color', 'Color', '#text', '@_Light', 'Light', '@_Value', 'Value'];\r\n            for (const key of directKeys) {\r\n                const candidate = (value as Record<string, unknown>)[key];\r\n                if (typeof candidate === 'string' && candidate.trim()) {\r\n                    return candidate;\r\n                }\r\n            }\r\n\r\n            for (const key of Object.keys(value)) {\r\n                const result = this._findColorInParsedValue((value as Record<string, unknown>)[key]);\r\n                if (result) {\r\n                    return result;\r\n                }\r\n            }\r\n        }\r\n\r\n        return undefined;\r\n    }\r\n\r\n    private _applyLayoutOptions(style: Map<string, string>, axis: 'horizontal' | 'vertical', option: string) {\r\n        const normalized = option.toLowerCase();\r\n        if (axis === 'horizontal') {\r\n            if (normalized === 'center') {\r\n                style.set('margin-left', 'auto');\r\n                style.set('margin-right', 'auto');\r\n            } else if (normalized === 'end') {\r\n                style.set('margin-left', 'auto');\r\n            } else if (normalized === 'start') {\r\n                style.set('margin-right', 'auto');\r\n            } else if (normalized === 'fill' || normalized === 'fillandexpand') {\r\n                style.set('width', '100%');\r\n            }\r\n        } else {\r\n            if (normalized === 'center') {\r\n                style.set('align-self', 'center');\r\n            } else if (normalized === 'end') {\r\n                style.set('align-self', 'flex-end');\r\n            } else if (normalized === 'start') {\r\n                style.set('align-self', 'flex-start');\r\n            } else if (normalized === 'fill' || normalized === 'fillandexpand') {\r\n                style.set('align-self', 'stretch');\r\n            }\r\n        }\r\n    }\r\n\r\n    private _convertThickness(value: string): string {\r\n        const parts = value.split(',').map(p => p.trim()).filter(Boolean);\r\n        if (parts.length === 0) {\r\n            return '0px';\r\n        }\r\n        if (parts.length === 1) {\r\n            const px = this._toPixels(parts[0]);\r\n            return `${px}`;\r\n        }\r\n        if (parts.length === 2) {\r\n            const vertical = this._toPixels(parts[0]);\r\n            const horizontal = this._toPixels(parts[1]);\r\n            return `${vertical} ${horizontal}`;\r\n        }\r\n        if (parts.length === 3) {\r\n            const top = this._toPixels(parts[0]);\r\n            const horizontal = this._toPixels(parts[1]);\r\n            const bottom = this._toPixels(parts[2]);\r\n            return `${top} ${horizontal} ${bottom}`;\r\n        }\r\n        const top = this._toPixels(parts[0]);\r\n        const right = this._toPixels(parts[1]);\r\n        const bottom = this._toPixels(parts[2]);\r\n        const left = this._toPixels(parts[3]);\r\n        return `${top} ${right} ${bottom} ${left}`;\r\n    }\r\n\r\n    private _convertCornerRadius(value: string): string {\r\n        if (!value) {\r\n            return '0px';\r\n        }\r\n        return this._convertThickness(value);\r\n    }\r\n\r\n    private _convertGridLength(value: string): string {\r\n        if (!value) {\r\n            return '1fr';\r\n        }\r\n        const trimmed = value.trim();\r\n        if (!trimmed || trimmed === '*') {\r\n            return '1fr';\r\n        }\r\n        if (trimmed.toLowerCase() === 'auto') {\r\n            return 'auto';\r\n        }\r\n        if (trimmed.endsWith('*')) {\r\n            const factor = parseFloat(trimmed.slice(0, -1));\r\n            return `${Number.isNaN(factor) ? 1 : factor}fr`;\r\n        }\r\n        const numeric = parseFloat(trimmed);\r\n        if (!Number.isNaN(numeric)) {\r\n            return `${numeric}px`;\r\n        }\r\n        return trimmed;\r\n    }\r\n\r\n    private _toPixels(value: string): string {\r\n        if (!value) {\r\n            return '0px';\r\n        }\r\n        const normalized = value.trim();\r\n        if (normalized.endsWith('px') || normalized.endsWith('%')) {\r\n            return normalized;\r\n        }\r\n        const numeric = parseFloat(normalized);\r\n        if (!Number.isNaN(numeric)) {\r\n            return `${numeric}px`;\r\n        }\r\n        return normalized;\r\n    }\r\n\r\n    private _escapeHtml(value: string): string {\r\n        return value\r\n            .replace(/&/g, '&amp;')\r\n            .replace(/</g, '&lt;')\r\n            .replace(/>/g, '&gt;')\r\n            .replace(/\"/g, '&quot;')\r\n            .replace(/'/g, '&#39;');\r\n    }\r\n\r\n    private _convertParsedToXamlElements(elements: ParsedElement[]): XamlElement[] {\r\n        return elements.map(element => this._convertParsedElement(element));\r\n    }\r\n\r\n    private _convertParsedElement(element: ParsedElement): XamlElement {\r\n        const properties = this._buildElementProperties(element);\r\n        return {\r\n            id: element.id,\r\n            type: element.type,\r\n            name: element.name || element.type,\r\n            properties,\r\n            children: element.children.map(child => this._convertParsedElement(child))\r\n        };\r\n    }\r\n\r\n    private _buildElementProperties(element: ParsedElement): ElementProperty[] {\r\n        const properties: ElementProperty[] = [];\r\n        const entries = Object.entries(element.resolvedAttributes);\r\n        for (const [key, value] of entries) {\r\n            if (!value) {\r\n                continue;\r\n            }\r\n            const normalizedValue = this._normalizePropertyValue(key, value);\r\n            properties.push({\r\n                key,\r\n                value: normalizedValue,\r\n                type: this._determinePropertyType(key, normalizedValue),\r\n                section: this._getPropertySection(key),\r\n                elementType: element.type\r\n            });\r\n        }\r\n\r\n        properties.push({\r\n            key: 'Type',\r\n            value: element.type,\r\n            type: 'string',\r\n            section: 'structure'\r\n        });\r\n\r\n        if (element.name) {\r\n            properties.push({\r\n                key: 'Name',\r\n                value: element.name,\r\n                type: 'string',\r\n                section: 'structure'\r\n            });\r\n        }\r\n\r\n        if (element.textContent) {\r\n            properties.push({\r\n                key: 'Text',\r\n                value: element.textContent,\r\n                type: 'string',\r\n                section: 'appearance'\r\n            });\r\n        }\r\n\r\n        return properties;\r\n    }\r\n\r\n    private _normalizePropertyValue(key: string, value: string): string {\r\n        if (!value) {\r\n            return value;\r\n        }\r\n        if (key.toLowerCase().includes('color')) {\r\n            return this._resolveColor(value) ?? value;\r\n        }\r\n        return value;\r\n    }\r\n\r\n    private _determinePropertyType(key: string, value: string): ElementProperty['type'] {\r\n        const lowerKey = key.toLowerCase();\r\n        const lowerValue = value.toLowerCase();\r\n        if (lowerKey.includes('color') || lowerValue.startsWith('#') || lowerValue.startsWith('rgb')) {\r\n            return 'color';\r\n        }\r\n        if (lowerValue === 'true' || lowerValue === 'false') {\r\n            return 'boolean';\r\n        }\r\n        if (!Number.isNaN(Number(value))) {\r\n            return 'number';\r\n        }\r\n        return 'string';\r\n    }\r\n\r\n    private _getPropertySection(propertyName: string): 'appearance' | 'layout' | 'structure' {\r\n        const lower = propertyName.toLowerCase();\r\n        const layoutProps = ['margin', 'padding', 'width', 'widthrequest', 'height', 'heightrequest', 'horizontaloptions', 'verticaloptions', 'grid.row', 'grid.column', 'grid.rowspan', 'grid.columnspan'];\r\n        const appearanceProps = ['background', 'backgroundcolor', 'textcolor', 'color', 'font', 'opacity', 'corner', 'border', 'stroke'];\r\n\r\n        if (layoutProps.some(prop => lower.includes(prop))) {\r\n            return 'layout';\r\n        }\r\n        if (appearanceProps.some(prop => lower.includes(prop))) {\r\n            return 'appearance';\r\n        }\r\n        return 'structure';\r\n    }\r\n\r\n    private _showErrorMessage(message: string) {\r\n        if (!this._currentPanel) {\r\n            return;\r\n        }\r\n\r\n        this._currentPanel.webview.html = `<!DOCTYPE html>\r\n<html>\r\n<head>\r\n<meta charset=\"UTF-8\" />\r\n<title>MAUI XAML Preview - Error</title>\r\n<style>\r\n    body {\r\n        font-family: Segoe UI, sans-serif;\r\n        background: #f6f8fa;\r\n        color: #b91c1c;\r\n        padding: 24px;\r\n    }\r\n    .error {\r\n        background: #fff;\r\n        border-left: 4px solid #dc2626;\r\n        padding: 16px 20px;\r\n        border-radius: 8px;\r\n        box-shadow: 0 4px 12px rgba(0,0,0,0.06);\r\n    }\r\n</style>\r\n</head>\r\n<body>\r\n<div class=\"error\">\r\n    <h2>⚠️ Napaka pri generiranju predogleda</h2>\r\n    <p>${this._escapeHtml(message)}</p>\r\n</div>\r\n</body>\r\n</html>`;\r\n    }\r\n\r\n    private _nextElementId(): string {\r\n        return `element_${this._elementIdCounter++}`;\r\n    }\r\n}\r\n"]}
{"version":3,"file":"entityManager.js","sourceRoot":"","sources":["../src/entityManager.ts"],"names":[],"mappings":"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","sourcesContent":["export interface MauiEntity {\n    name: string;\n    description: string;\n    category: string;\n    xamlTemplate: string;\n    properties: MauiProperty[];\n}\n\nexport interface MauiProperty {\n    name: string;\n    type: 'string' | 'number' | 'boolean' | 'color' | 'enum';\n    defaultValue?: string;\n    enumValues?: string[];\n    required?: boolean;\n}\n\nexport class EntityManager {\n    private entities: MauiEntity[] = [];\n\n    constructor() {\n        this.initializeEntities();\n    }\n\n    public getAvailableEntities(): MauiEntity[] {\n        return this.entities;\n    }\n\n    public getEntityByName(name: string): MauiEntity | undefined {\n        return this.entities.find(entity => entity.name === name);\n    }\n\n    public generateXamlCode(entity: MauiEntity, customProperties?: { [key: string]: string }): string {\n        let xaml = entity.xamlTemplate;\n\n        // Zamenjaj placeholder-je z dejanskimi vrednostmi\n        if (customProperties) {\n            for (const [property, value] of Object.entries(customProperties)) {\n                const placeholder = `{{${property}}}`;\n                xaml = xaml.replace(new RegExp(placeholder, 'g'), value);\n            }\n        }\n\n        // Odstrani neuporabljene placeholder-je\n        xaml = xaml.replace(/\\{\\{[^}]+\\}\\}/g, '');\n\n        return xaml;\n    }\n\n    private initializeEntities(): void {\n        this.entities = [\n            // Layout Controls\n            {\n                name: 'StackLayout',\n                description: 'Vertikalno ali horizontalno razporejanje elementov',\n                category: 'Layout',\n                xamlTemplate: `<StackLayout Orientation=\"{{Orientation}}\" Spacing=\"{{Spacing}}\" Padding=\"{{Padding}}\">\n    <Label Text=\"Element 1\" />\n    <Label Text=\"Element 2\" />\n</StackLayout>`,\n                properties: [\n                    { name: 'Orientation', type: 'enum', enumValues: ['Vertical', 'Horizontal'], defaultValue: 'Vertical' },\n                    { name: 'Spacing', type: 'number', defaultValue: '6' },\n                    { name: 'Padding', type: 'string', defaultValue: '0' }\n                ]\n            },\n            {\n                name: 'Grid',\n                description: 'Mrežno razporejanje elementov v vrstice in stolpce',\n                category: 'Layout',\n                xamlTemplate: `<Grid RowDefinitions=\"{{RowDefinitions}}\" ColumnDefinitions=\"{{ColumnDefinitions}}\">\n    <Label Text=\"Cell 1\" Grid.Row=\"0\" Grid.Column=\"0\" />\n    <Label Text=\"Cell 2\" Grid.Row=\"0\" Grid.Column=\"1\" />\n    <Label Text=\"Cell 3\" Grid.Row=\"1\" Grid.Column=\"0\" />\n    <Label Text=\"Cell 4\" Grid.Row=\"1\" Grid.Column=\"1\" />\n</Grid>`,\n                properties: [\n                    { name: 'RowDefinitions', type: 'string', defaultValue: '*,*' },\n                    { name: 'ColumnDefinitions', type: 'string', defaultValue: '*,*' },\n                    { name: 'RowSpacing', type: 'number', defaultValue: '6' },\n                    { name: 'ColumnSpacing', type: 'number', defaultValue: '6' }\n                ]\n            },\n            {\n                name: 'FlexLayout',\n                description: 'Fleksibilno razporejanje z možnostjo ovijanja',\n                category: 'Layout',\n                xamlTemplate: `<FlexLayout Direction=\"{{Direction}}\" Wrap=\"{{Wrap}}\" JustifyContent=\"{{JustifyContent}}\" AlignItems=\"{{AlignItems}}\">\n    <Label Text=\"Flex Item 1\" FlexLayout.Grow=\"1\" />\n    <Label Text=\"Flex Item 2\" FlexLayout.Grow=\"1\" />\n    <Label Text=\"Flex Item 3\" FlexLayout.Grow=\"1\" />\n</FlexLayout>`,\n                properties: [\n                    { name: 'Direction', type: 'enum', enumValues: ['Row', 'Column', 'RowReverse', 'ColumnReverse'], defaultValue: 'Row' },\n                    { name: 'Wrap', type: 'enum', enumValues: ['NoWrap', 'Wrap', 'Reverse'], defaultValue: 'NoWrap' },\n                    { name: 'JustifyContent', type: 'enum', enumValues: ['Start', 'Center', 'End', 'SpaceBetween', 'SpaceAround', 'SpaceEvenly'], defaultValue: 'Start' },\n                    { name: 'AlignItems', type: 'enum', enumValues: ['Start', 'Center', 'End', 'Stretch'], defaultValue: 'Stretch' }\n                ]\n            },\n            {\n                name: 'AbsoluteLayout',\n                description: 'Absolutno pozicioniranje elementov',\n                category: 'Layout',\n                xamlTemplate: `<AbsoluteLayout>\n    <Label Text=\"Absolute Position\" AbsoluteLayout.LayoutBounds=\"{{LayoutBounds}}\" AbsoluteLayout.LayoutFlags=\"{{LayoutFlags}}\" />\n</AbsoluteLayout>`,\n                properties: [\n                    { name: 'LayoutBounds', type: 'string', defaultValue: '0.5,0.5,100,50' },\n                    { name: 'LayoutFlags', type: 'enum', enumValues: ['None', 'XProportional', 'YProportional', 'PositionProportional', 'WidthProportional', 'HeightProportional', 'SizeProportional', 'All'], defaultValue: 'PositionProportional' }\n                ]\n            },\n\n            // Basic Controls\n            {\n                name: 'Label',\n                description: 'Prikaz besedila',\n                category: 'Controls',\n                xamlTemplate: `<Label Text=\"{{Text}}\" FontSize=\"{{FontSize}}\" TextColor=\"{{TextColor}}\" HorizontalOptions=\"{{HorizontalOptions}}\" VerticalOptions=\"{{VerticalOptions}}\" />`,\n                properties: [\n                    { name: 'Text', type: 'string', defaultValue: 'Label Text', required: true },\n                    { name: 'FontSize', type: 'number', defaultValue: '16' },\n                    { name: 'TextColor', type: 'color', defaultValue: '#000000' },\n                    { name: 'HorizontalOptions', type: 'enum', enumValues: ['Start', 'Center', 'End', 'Fill'], defaultValue: 'Start' },\n                    { name: 'VerticalOptions', type: 'enum', enumValues: ['Start', 'Center', 'End', 'Fill'], defaultValue: 'Start' }\n                ]\n            },\n            {\n                name: 'Button',\n                description: 'Gumb za interakcijo',\n                category: 'Controls',\n                xamlTemplate: `<Button Text=\"{{Text}}\" BackgroundColor=\"{{BackgroundColor}}\" TextColor=\"{{TextColor}}\" CornerRadius=\"{{CornerRadius}}\" Command=\"{{Command}}\" />`,\n                properties: [\n                    { name: 'Text', type: 'string', defaultValue: 'Button', required: true },\n                    { name: 'BackgroundColor', type: 'color', defaultValue: '#2196F3' },\n                    { name: 'TextColor', type: 'color', defaultValue: '#FFFFFF' },\n                    { name: 'CornerRadius', type: 'number', defaultValue: '6' },\n                    { name: 'Command', type: 'string', defaultValue: '' }\n                ]\n            },\n            {\n                name: 'Entry',\n                description: 'Vnosno polje za besedilo',\n                category: 'Controls',\n                xamlTemplate: `<Entry Text=\"{{Text}}\" Placeholder=\"{{Placeholder}}\" Keyboard=\"{{Keyboard}}\" IsPassword=\"{{IsPassword}}\" />`,\n                properties: [\n                    { name: 'Text', type: 'string', defaultValue: '' },\n                    { name: 'Placeholder', type: 'string', defaultValue: 'Enter text...' },\n                    { name: 'Keyboard', type: 'enum', enumValues: ['Default', 'Email', 'Numeric', 'Telephone', 'Text', 'Url'], defaultValue: 'Default' },\n                    { name: 'IsPassword', type: 'boolean', defaultValue: 'False' }\n                ]\n            },\n            {\n                name: 'Editor',\n                description: 'Večvrstično vnosno polje',\n                category: 'Controls',\n                xamlTemplate: `<Editor Text=\"{{Text}}\" Placeholder=\"{{Placeholder}}\" AutoSize=\"{{AutoSize}}\" />`,\n                properties: [\n                    { name: 'Text', type: 'string', defaultValue: '' },\n                    { name: 'Placeholder', type: 'string', defaultValue: 'Enter multiline text...' },\n                    { name: 'AutoSize', type: 'enum', enumValues: ['None', 'TextChanges'], defaultValue: 'None' }\n                ]\n            },\n            {\n                name: 'Image',\n                description: 'Prikaz slike',\n                category: 'Controls',\n                xamlTemplate: `<Image Source=\"{{Source}}\" Aspect=\"{{Aspect}}\" />`,\n                properties: [\n                    { name: 'Source', type: 'string', defaultValue: 'https://via.placeholder.com/150', required: true },\n                    { name: 'Aspect', type: 'enum', enumValues: ['AspectFit', 'AspectFill', 'Fill'], defaultValue: 'AspectFit' }\n                ]\n            },\n\n            // Selection Controls\n            {\n                name: 'CheckBox',\n                description: 'Potrditveno polje',\n                category: 'Selection',\n                xamlTemplate: `<CheckBox IsChecked=\"{{IsChecked}}\" Color=\"{{Color}}\" />`,\n                properties: [\n                    { name: 'IsChecked', type: 'boolean', defaultValue: 'False' },\n                    { name: 'Color', type: 'color', defaultValue: '#2196F3' }\n                ]\n            },\n            {\n                name: 'Switch',\n                description: 'Stikalo za vklop/izklop',\n                category: 'Selection',\n                xamlTemplate: `<Switch IsToggled=\"{{IsToggled}}\" OnColor=\"{{OnColor}}\" ThumbColor=\"{{ThumbColor}}\" />`,\n                properties: [\n                    { name: 'IsToggled', type: 'boolean', defaultValue: 'False' },\n                    { name: 'OnColor', type: 'color', defaultValue: '#4CAF50' },\n                    { name: 'ThumbColor', type: 'color', defaultValue: '#FFFFFF' }\n                ]\n            },\n            {\n                name: 'Slider',\n                description: 'Drsnik za izbiro vrednosti',\n                category: 'Selection',\n                xamlTemplate: `<Slider Minimum=\"{{Minimum}}\" Maximum=\"{{Maximum}}\" Value=\"{{Value}}\" />`,\n                properties: [\n                    { name: 'Minimum', type: 'number', defaultValue: '0' },\n                    { name: 'Maximum', type: 'number', defaultValue: '100' },\n                    { name: 'Value', type: 'number', defaultValue: '50' }\n                ]\n            },\n            {\n                name: 'Stepper',\n                description: 'Koračni izbirnik vrednosti',\n                category: 'Selection',\n                xamlTemplate: `<Stepper Minimum=\"{{Minimum}}\" Maximum=\"{{Maximum}}\" Value=\"{{Value}}\" Increment=\"{{Increment}}\" />`,\n                properties: [\n                    { name: 'Minimum', type: 'number', defaultValue: '0' },\n                    { name: 'Maximum', type: 'number', defaultValue: '100' },\n                    { name: 'Value', type: 'number', defaultValue: '0' },\n                    { name: 'Increment', type: 'number', defaultValue: '1' }\n                ]\n            },\n            {\n                name: 'Picker',\n                description: 'Spustni seznam za izbiro',\n                category: 'Selection',\n                xamlTemplate: `<Picker Title=\"{{Title}}\" SelectedIndex=\"{{SelectedIndex}}\">\n    <Picker.ItemsSource>\n        <x:Array Type=\"{x:Type x:String}\">\n            <x:String>Option 1</x:String>\n            <x:String>Option 2</x:String>\n            <x:String>Option 3</x:String>\n        </x:Array>\n    </Picker.ItemsSource>\n</Picker>`,\n                properties: [\n                    { name: 'Title', type: 'string', defaultValue: 'Select an option' },\n                    { name: 'SelectedIndex', type: 'number', defaultValue: '-1' }\n                ]\n            },\n\n            // Collection Controls\n            {\n                name: 'ListView',\n                description: 'Seznam elementov z možnostjo drsenja',\n                category: 'Collections',\n                xamlTemplate: `<ListView ItemsSource=\"{{ItemsSource}}\" HasUnevenRows=\"{{HasUnevenRows}}\">\n    <ListView.ItemTemplate>\n        <DataTemplate>\n            <ViewCell>\n                <StackLayout Padding=\"15\">\n                    <Label Text=\"{Binding Title}\" FontSize=\"16\" />\n                    <Label Text=\"{Binding Description}\" FontSize=\"13\" TextColor=\"Gray\" />\n                </StackLayout>\n            </ViewCell>\n        </DataTemplate>\n    </ListView.ItemTemplate>\n</ListView>`,\n                properties: [\n                    { name: 'ItemsSource', type: 'string', defaultValue: '{Binding Items}' },\n                    { name: 'HasUnevenRows', type: 'boolean', defaultValue: 'True' }\n                ]\n            },\n            {\n                name: 'CollectionView',\n                description: 'Sodobna alternativa ListView z boljšo zmogljivostjo',\n                category: 'Collections',\n                xamlTemplate: `<CollectionView ItemsSource=\"{{ItemsSource}}\">\n    <CollectionView.ItemTemplate>\n        <DataTemplate>\n            <StackLayout Padding=\"15\">\n                <Label Text=\"{Binding Title}\" FontSize=\"16\" />\n                <Label Text=\"{Binding Description}\" FontSize=\"13\" TextColor=\"Gray\" />\n            </StackLayout>\n        </DataTemplate>\n    </CollectionView.ItemTemplate>\n</CollectionView>`,\n                properties: [\n                    { name: 'ItemsSource', type: 'string', defaultValue: '{Binding Items}' }\n                ]\n            },\n            {\n                name: 'CarouselView',\n                description: 'Karuselni prikaz elementov',\n                category: 'Collections',\n                xamlTemplate: `<CarouselView ItemsSource=\"{{ItemsSource}}\" IndicatorView=\"{{IndicatorView}}\">\n    <CarouselView.ItemTemplate>\n        <DataTemplate>\n            <StackLayout>\n                <Frame HasShadow=\"True\" BorderColor=\"DarkGray\" CornerRadius=\"5\" Margin=\"20\" HeightRequest=\"300\">\n                    <StackLayout>\n                        <Label Text=\"{Binding Title}\" FontSize=\"Large\" HorizontalOptions=\"Center\" />\n                        <Image Source=\"{Binding ImageUrl}\" Aspect=\"AspectFill\" HeightRequest=\"150\" WidthRequest=\"150\" />\n                        <Label Text=\"{Binding Description}\" FontAttributes=\"Italic\" HorizontalOptions=\"Center\" />\n                    </StackLayout>\n                </Frame>\n            </StackLayout>\n        </DataTemplate>\n    </CarouselView.ItemTemplate>\n</CarouselView>`,\n                properties: [\n                    { name: 'ItemsSource', type: 'string', defaultValue: '{Binding Items}' },\n                    { name: 'IndicatorView', type: 'string', defaultValue: 'indicatorView' }\n                ]\n            },\n\n            // Visual Elements\n            {\n                name: 'Frame',\n                description: 'Okvir z senco in robovi',\n                category: 'Visual',\n                xamlTemplate: `<Frame BackgroundColor=\"{{BackgroundColor}}\" BorderColor=\"{{BorderColor}}\" CornerRadius=\"{{CornerRadius}}\" HasShadow=\"{{HasShadow}}\" Padding=\"{{Padding}}\">\n    <Label Text=\"Content inside frame\" />\n</Frame>`,\n                properties: [\n                    { name: 'BackgroundColor', type: 'color', defaultValue: '#FFFFFF' },\n                    { name: 'BorderColor', type: 'color', defaultValue: '#CCCCCC' },\n                    { name: 'CornerRadius', type: 'number', defaultValue: '5' },\n                    { name: 'HasShadow', type: 'boolean', defaultValue: 'True' },\n                    { name: 'Padding', type: 'string', defaultValue: '10' }\n                ]\n            },\n            {\n                name: 'Border',\n                description: 'Meja z možnostjo različnih oblik',\n                category: 'Visual',\n                xamlTemplate: `<Border Stroke=\"{{Stroke}}\" StrokeThickness=\"{{StrokeThickness}}\" StrokeShape=\"{{StrokeShape}}\" Background=\"{{Background}}\">\n    <Label Text=\"Content with border\" Margin=\"10\" />\n</Border>`,\n                properties: [\n                    { name: 'Stroke', type: 'color', defaultValue: '#000000' },\n                    { name: 'StrokeThickness', type: 'number', defaultValue: '1' },\n                    { name: 'StrokeShape', type: 'string', defaultValue: 'Rectangle' },\n                    { name: 'Background', type: 'color', defaultValue: 'Transparent' }\n                ]\n            },\n            {\n                name: 'BoxView',\n                description: 'Enostavna pravokotna barva',\n                category: 'Visual',\n                xamlTemplate: `<BoxView Color=\"{{Color}}\" WidthRequest=\"{{WidthRequest}}\" HeightRequest=\"{{HeightRequest}}\" />`,\n                properties: [\n                    { name: 'Color', type: 'color', defaultValue: '#2196F3' },\n                    { name: 'WidthRequest', type: 'number', defaultValue: '100' },\n                    { name: 'HeightRequest', type: 'number', defaultValue: '100' }\n                ]\n            },\n\n            // Progress and Activity\n            {\n                name: 'ProgressBar',\n                description: 'Vrstica napredovanja',\n                category: 'Progress',\n                xamlTemplate: `<ProgressBar Progress=\"{{Progress}}\" ProgressColor=\"{{ProgressColor}}\" />`,\n                properties: [\n                    { name: 'Progress', type: 'number', defaultValue: '0.5' },\n                    { name: 'ProgressColor', type: 'color', defaultValue: '#2196F3' }\n                ]\n            },\n            {\n                name: 'ActivityIndicator',\n                description: 'Indikator nalaganja',\n                category: 'Progress',\n                xamlTemplate: `<ActivityIndicator IsRunning=\"{{IsRunning}}\" Color=\"{{Color}}\" />`,\n                properties: [\n                    { name: 'IsRunning', type: 'boolean', defaultValue: 'True' },\n                    { name: 'Color', type: 'color', defaultValue: '#2196F3' }\n                ]\n            }\n        ];\n    }\n\n    public getEntitiesByCategory(category: string): MauiEntity[] {\n        return this.entities.filter(entity => entity.category === category);\n    }\n\n    public getAllCategories(): string[] {\n        const categories = this.entities.map(entity => entity.category);\n        return [...new Set(categories)];\n    }\n\n    public searchEntities(searchTerm: string): MauiEntity[] {\n        const term = searchTerm.toLowerCase();\n        return this.entities.filter(entity =>\n            entity.name.toLowerCase().includes(term) ||\n            entity.description.toLowerCase().includes(term) ||\n            entity.category.toLowerCase().includes(term)\n        );\n    }\n}"]}
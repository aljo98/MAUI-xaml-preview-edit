{"version":3,"file":"extension.js","sourceRoot":"","sources":["../src/extension.ts"],"names":[],"mappings":"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","sourcesContent":["import * as vscode from 'vscode';\nimport { MauiXamlPreviewProvider } from './previewProvider';\nimport { EntityManager } from './entityManager';\n\nexport async function activate(context: vscode.ExtensionContext) {\n    console.log('MAUI XAML Preview extension je aktivna!');\n\n    // Registracija preview providerja\n    const previewProvider = new MauiXamlPreviewProvider(context.extensionUri);\n    const providerRegistration = vscode.window.registerWebviewPanelSerializer(\n        'mauiXamlPreview',\n        previewProvider\n    );\n\n    // Registracija sidebar providerjev (3 ločeni pogledi kot pri GitHub Changes/Graph)\n    const propertiesModule = await import('./propertiesProvider');\n    const propertiesProvider = new propertiesModule.MauiPropertiesProvider(context.extensionUri, 'props');\n    const templatesProvider = new propertiesModule.MauiPropertiesProvider(context.extensionUri, 'templates');\n    const structureProvider = new propertiesModule.MauiPropertiesProvider(context.extensionUri, 'structure');\n\n    // Ensure providers have correct modes (defensive in case constructor defaulting changes)\n    propertiesProvider.setMode('props');\n    templatesProvider.setMode('templates');\n    structureProvider.setMode('structure');\n\n    const propertiesTreeView = vscode.window.createTreeView('mauiProperties', {\n        treeDataProvider: propertiesProvider,\n        showCollapseAll: false\n    });\n    const templatesTreeView = vscode.window.createTreeView('mauiTemplates', {\n        treeDataProvider: templatesProvider,\n        showCollapseAll: false\n    });\n    const structureTreeView = vscode.window.createTreeView('mauiStructure', {\n        treeDataProvider: structureProvider,\n        showCollapseAll: true\n    });\n\n    // Also register as TreeDataProviders explicitly (defensive) so VS Code always has a provider\n    const regProps = vscode.window.registerTreeDataProvider('mauiProperties', propertiesProvider);\n    const regTemplates = vscode.window.registerTreeDataProvider('mauiTemplates', templatesProvider);\n    const regStructure = vscode.window.registerTreeDataProvider('mauiStructure', structureProvider);\n    console.log('[Extension] Registered tree data providers for properties, templates and structure');\n\n    // Povezava med preview in providerji\n    previewProvider.setPropertiesProvider(propertiesProvider, propertiesTreeView);\n    previewProvider.setStructureProvider(structureProvider, structureTreeView);\n\n    // Decoration type for highlighting selected elements v kodi\n    const elementHighlightDecoration = vscode.window.createTextEditorDecorationType({\n        backgroundColor: 'rgba(255, 152, 0, 0.2)',\n        border: '2px solid #ff9800',\n        borderRadius: '4px'\n    });\n\n    // Inicializacija entity managerja\n    const entityManager = new EntityManager();\n\n    // Template manager\n    const { TemplateManager } = await import('./templateManager');\n    const templateManager = new TemplateManager(context.extensionUri);\n    await templateManager.loadTemplates();\n    templatesProvider.setTemplates(templateManager.getTemplates());\n    // Force refresh so the view reflects templates immediately\n    templatesProvider.refresh();\n    // ensure registered disposables are tracked\n    context.subscriptions.push(regProps, regTemplates, regStructure);\n\n    // Status bar gumb za hiter dostop do preview-ja\n    const previewStatusBar = vscode.window.createStatusBarItem(vscode.StatusBarAlignment.Right, 100);\n    previewStatusBar.text = '$(preview) MAUI Preview';\n    previewStatusBar.tooltip = 'Odpri MAUI XAML Preview';\n    previewStatusBar.command = 'mauiXamlPreview.openPreview';\n    context.subscriptions.push(previewStatusBar);\n\n    const updatePreviewStatusBar = (editor?: vscode.TextEditor | null) => {\n        const targetEditor = editor ?? vscode.window.activeTextEditor;\n        if (targetEditor && targetEditor.document.fileName.toLowerCase().endsWith('.xaml')) {\n            previewStatusBar.show();\n        } else {\n            previewStatusBar.hide();\n        }\n    };\n\n    updatePreviewStatusBar(vscode.window.activeTextEditor);\n\n    // Ukaz za odpiranje preview-ja\n    const openPreviewCommand = vscode.commands.registerCommand(\n        'mauiXamlPreview.openPreview',\n        () => {\n            const activeEditor = vscode.window.activeTextEditor;\n            if (!activeEditor) {\n                vscode.window.showWarningMessage('Odprite XAML datoteko za preview!');\n                return;\n            }\n\n            const document = activeEditor.document;\n            if (!document.fileName.endsWith('.xaml')) {\n                vscode.window.showWarningMessage('Preview deluje samo z XAML datotekami!');\n                return;\n            }\n\n            previewProvider.openPreview(document);\n            previewProvider.setElementHighlightDecoration(elementHighlightDecoration);\n            updatePreviewStatusBar(activeEditor);\n        }\n    );\n\n    // Ukaz za urejanje lastnosti\n    const editPropertyCommand = vscode.commands.registerCommand('mauiProperties.editProperty', async (property: any) => {\n        if (!property) return;\n\n        let newValue: string | undefined;\n\n        const lowerKey = String(property.key || '').toLowerCase();\n        const type: string = property.type || 'string';\n\n        if (true) {\n            newValue = await vscode.window.showInputBox({\n                prompt: `Vnesi novo vrednost za ${property.key}`,\n                value: property.value,\n                placeHolder: property.value\n            });\n        }\n\n        if (newValue === undefined) return;\n\n        // 1) Posodobi DOM v webview-u\n        previewProvider.updateElementProperty(property, newValue);\n\n        // 2) Posodobi XAML kodo (best-effort inline edit)\n        const editor = vscode.window.activeTextEditor;\n        if (!editor || !editor.document.fileName.toLowerCase().endsWith('.xaml')) {\n            vscode.window.showInformationMessage(`Posodobljena lastnost ${property.key}: ${newValue}`);\n            return;\n        }\n\n        const doc = editor.document;\n        const text = doc.getText();\n        const keyPattern = property.key.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n        const attrRegex = new RegExp(`${keyPattern}\\\\s*=\\\\s*\"([^\"]*)\"`, 'i');\n\n        const edit = new vscode.WorkspaceEdit();\n        if (attrRegex.test(text)) {\n            const match = attrRegex.exec(text)!;\n            const idx = match.index;\n            const start = doc.positionAt(idx);\n            const end = doc.positionAt(idx + match[0].length);\n            const newAttr = `${property.key}=\"${newValue}\"`;\n            edit.replace(doc.uri, new vscode.Range(start, end), newAttr);\n        } else {\n            // Insert attribute after element start tag for a quick update\n            const openTag = new RegExp(`<${property.elementType}[^>]*>`, 'i').exec(text);\n            if (openTag) {\n                const insertPos = doc.positionAt(openTag.index + openTag[0].length - 1); // before '>'\n                const insertion = ` ${property.key}=\"${newValue}\"`;\n                edit.insert(doc.uri, insertPos, insertion);\n            }\n        }\n\n        if (edit.size > 0) {\n            await vscode.workspace.applyEdit(edit);\n            await doc.save();\n        }\n\n        vscode.window.showInformationMessage(`Posodobljena lastnost ${property.key}: ${newValue}`);\n    });\n\n    // Ukaz: Dodaj lastnost z iskanjem in predlogi (bindings, style, resources)\n    const addPropertyCommand = vscode.commands.registerCommand('mauiProperties.addProperty', async (element: any) => {\n        if (!element) return;\n\n        // 1) Izberi ali vnesi ime lastnosti\n        const baseSuggestions = [\n            'Text', 'TextColor', 'BackgroundColor', 'FontSize', 'FontAttributes', 'FontFamily', 'LineHeight', 'CharacterSpacing', 'TextDecorations',\n            'WidthRequest', 'HeightRequest', 'MinWidthRequest', 'MinHeightRequest', 'MaxWidthRequest', 'MaxHeightRequest',\n            'Margin', 'Padding', 'CornerRadius', 'BorderColor', 'BorderThickness', 'Stroke', 'StrokeThickness', 'Opacity', 'IsVisible', 'IsEnabled',\n            'HorizontalOptions', 'VerticalOptions', 'HorizontalTextAlignment', 'TextAlignment', 'Grid.Row', 'Grid.Column', 'Grid.RowSpan', 'Grid.ColumnSpan',\n            'Style', 'ClassId'\n        ];\n\n        const pickedKey = await vscode.window.showQuickPick(baseSuggestions.map(x => ({ label: x })), {\n            placeHolder: 'Izberi ali vnesi ime lastnosti (lahko začnete tipkati)'\n        }) || { label: '' };\n\n        const propertyKey = pickedKey.label || await vscode.window.showInputBox({\n            prompt: 'Vnesi ime lastnosti (npr. BackgroundColor, Text, Style, …)'\n        });\n        if (!propertyKey) return;\n\n        // 2) Hitre predloge za vrednost: Binding, StaticResource, Style\n        const styles = previewProvider.getStyleSuggestions();\n        const resources = previewProvider.getResourceKeySuggestions();\n        const colors = previewProvider.getColorSuggestions();\n\n        const quickTemplates = [\n            { label: 'Binding…', description: 'Ustvari {Binding ...}', tpl: '{Binding Path=MyProperty}' },\n            { label: 'StaticResource…', description: 'Ustvari {StaticResource ...}', tpl: '{StaticResource }' },\n            { label: 'Style…', description: 'Uporabi Style iz ResourceDictionary', tpl: '' },\n            { label: 'Barva…', description: 'Izberi barvo ali vnesi HEX', tpl: '' }\n        ];\n\n        const tmplPick = await vscode.window.showQuickPick(quickTemplates, { placeHolder: 'Izberi predlogo vrednosti ali preskoči za ročni vnos' });\n        let value: string | undefined;\n\n        if (tmplPick?.label === 'Binding…') {\n            value = await vscode.window.showInputBox({ prompt: 'Vnesi Binding (npr. Path=MyProperty, Mode=TwoWay)' }).then(v => v ? `{Binding ${v}}` : undefined);\n        } else if (tmplPick?.label === 'StaticResource…') {\n            const resPick = await vscode.window.showQuickPick(resources.map(r => ({ label: r })), { placeHolder: 'Izberi ključ resource' });\n            value = resPick?.label ? `{StaticResource ${resPick.label}}` : await vscode.window.showInputBox({ prompt: 'Vnesi ključ za {StaticResource ...}' }).then(v => v ? `{StaticResource ${v}}` : undefined);\n        } else if (tmplPick?.label === 'Style…') {\n            const stylePick = await vscode.window.showQuickPick(styles.map(s => ({ label: s })), { placeHolder: 'Izberi StyleKey' });\n            value = stylePick?.label;\n        } else if (tmplPick?.label === 'Barva…') {\n            const colorPick = await vscode.window.showQuickPick(colors.map(c => ({ label: c })), { placeHolder: 'Izberi barvo ali pritisni Esc za ročni vnos' });\n            value = colorPick?.label || await vscode.window.showInputBox({ prompt: 'Vnesi barvo (#hex, rgb(), ime ali {StaticResource ...})' });\n        } else {\n            value = await vscode.window.showInputBox({ prompt: `Vnesi vrednost za ${propertyKey}` });\n        }\n\n        if (!value) return;\n\n        // 3) Posodobi DOM v webview-u (če je na voljo elementType iz obstoječega propertyja, sicer best-effort)\n        const bestEffortProperty = { key: propertyKey, value, type: 'string', section: 'appearance', elementType: element.type };\n        previewProvider.updateElementProperty(bestEffortProperty as any, value);\n\n        // 4) Vstavi ali zamenjaj atribut v XAML\n        const editor = vscode.window.activeTextEditor;\n        if (!editor || !editor.document.fileName.toLowerCase().endsWith('.xaml')) {\n            vscode.window.showInformationMessage(`Dodana lastnost ${propertyKey}: ${value}`);\n            return;\n        }\n\n        const doc = editor.document;\n        const text = doc.getText();\n        const keyPattern = propertyKey.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n        const attrRegex = new RegExp(`${keyPattern}\\\\s*=\\\\s*\"([^\"]*)\"`, 'i');\n\n        const edit = new vscode.WorkspaceEdit();\n        if (attrRegex.test(text)) {\n            const match = attrRegex.exec(text)!;\n            const idx = match.index;\n            const start = doc.positionAt(idx);\n            const end = doc.positionAt(idx + match[0].length);\n            const newAttr = `${propertyKey}=\"${value}\"`;\n            edit.replace(doc.uri, new vscode.Range(start, end), newAttr);\n        } else {\n            const openTag = new RegExp(`<${element.type}[^>]*>`, 'i').exec(text);\n            if (openTag) {\n                const insertPos = doc.positionAt(openTag.index + openTag[0].length - 1);\n                const insertion = ` ${propertyKey}=\"${value}\"`;\n                edit.insert(doc.uri, insertPos, insertion);\n            }\n        }\n\n        if (edit.size > 0) {\n            await vscode.workspace.applyEdit(edit);\n            await doc.save();\n        }\n\n        vscode.window.showInformationMessage(`Dodana lastnost ${propertyKey}: ${value}`);\n    });\n\n    // Ukaz za dodajanje entitete\n    const addEntityCommand = vscode.commands.registerCommand(\n        'mauiXamlPreview.addEntity',\n        async () => {\n            const activeEditor = vscode.window.activeTextEditor;\n            if (!activeEditor) {\n                vscode.window.showWarningMessage('Odprite XAML datoteko!');\n                return;\n            }\n\n            const document = activeEditor.document;\n            if (!document.fileName.endsWith('.xaml')) {\n                vscode.window.showWarningMessage('Entitete lahko dodate samo v XAML datoteke!');\n                return;\n            }\n\n            // Prikaz quick pick z entitetami\n            const entities = entityManager.getAvailableEntities();\n            const selectedEntity = await vscode.window.showQuickPick(\n                entities.map(entity => ({\n                    label: entity.name,\n                    description: entity.description,\n                    detail: entity.category,\n                    entity: entity\n                })),\n                {\n                    placeHolder: 'Izberi MAUI element za dodajanje',\n                    matchOnDescription: true,\n                    matchOnDetail: true\n                }\n            );\n\n            if (selectedEntity) {\n                const position = activeEditor.selection.active;\n                const xamlCode = entityManager.generateXamlCode(selectedEntity.entity);\n\n                await activeEditor.edit(editBuilder => {\n                    editBuilder.insert(position, xamlCode);\n                });\n\n                vscode.window.showInformationMessage(`Dodal sem ${selectedEntity.entity.name}!`);\n            }\n        }\n    );\n\n    // NEW: Insert template example command\n    const insertTemplateCommand = vscode.commands.registerCommand('mauiTemplates.insertTemplate', async (template: any) => {\n        if (!template) return;\n        const editor = vscode.window.activeTextEditor;\n        if (!editor || !editor.document.fileName.toLowerCase().endsWith('.xaml')) {\n            vscode.window.showWarningMessage('Odprite XAML datoteko, da vstavite template.');\n            return;\n        }\n        const pos = editor.selection.active;\n        await editor.edit(edit => edit.insert(pos, `\\n${template.xaml}\\n`));\n        await editor.document.save();\n        vscode.window.showInformationMessage(`Vstavljen template: ${template.name}`);\n        // osveži preview\n        previewProvider.updatePreview(editor.document);\n    });\n\n    // NEW: Select element by ID command (from Structure tree clicks)\n    const selectElementByIdCommand = vscode.commands.registerCommand('mauiDesigner.selectElementById', async (elementId: string) => {\n        try {\n            await previewProvider.selectElementById(elementId);\n        } catch (err) {\n            console.warn('selectElementById failed', err);\n        }\n    });\n\n    // Avtomatsko osveževanje preview-ja ob spremembah\n    const onDidChangeDocument = vscode.workspace.onDidChangeTextDocument(\n        (event) => {\n            if (event.document.fileName.endsWith('.xaml')) {\n                previewProvider.updatePreview(event.document);\n            }\n        }\n    );\n\n    // Poslusjalec za spremembe aktivnega editorja\n    const onDidChangeActiveEditor = vscode.window.onDidChangeActiveTextEditor(\n        (editor) => {\n            if (editor && editor.document.fileName.endsWith('.xaml')) {\n                // Osveži properties panel za aktivno XAML datoteko\n                setTimeout(() => {\n                    previewProvider.updatePreview(editor.document);\n                }, 100);\n            }\n            updatePreviewStatusBar(editor);\n        }\n    );\n\n    // NEW: Premik kurzorja v XAML → izberi ustrezen element\n    const onDidChangeSelection = vscode.window.onDidChangeTextEditorSelection(async (e) => {\n        const doc = e.textEditor?.document;\n        if (!doc || !doc.fileName.toLowerCase().endsWith('.xaml')) return;\n        const line = e.selections[0]?.active.line ?? 0;\n        await previewProvider.selectElementAtLine(line);\n    });\n\n    // Registracija vseh dispozablov\n    context.subscriptions.push(\n        providerRegistration,\n        propertiesTreeView,\n        templatesTreeView,\n        structureTreeView,\n        openPreviewCommand,\n        editPropertyCommand,\n        addPropertyCommand,\n        addEntityCommand,\n        insertTemplateCommand,\n        selectElementByIdCommand,\n        onDidChangeDocument,\n        onDidChangeActiveEditor,\n        onDidChangeSelection\n    );\n\n    // Avtomatsko odpiranje preview-ja če je XAML datoteka odprta\n    if (vscode.window.activeTextEditor?.document.fileName.endsWith('.xaml')) {\n        previewStatusBar.show();\n        vscode.commands.executeCommand('mauiXamlPreview.openPreview');\n    }\n}\n\nexport function deactivate() {\n    console.log('MAUI XAML Preview extension se deaktivira...');\n}"]}